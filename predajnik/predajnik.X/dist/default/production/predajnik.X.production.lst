

Microchip Technology PIC LITE Macro Assembler V1.35 build -356382666 
                                                                                               Sat Apr 09 11:09:15 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	16F1939
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	dabs	1,0x7E,2
    17  0000                     	;# 
    18  0001                     	;# 
    19  0002                     	;# 
    20  0003                     	;# 
    21  0004                     	;# 
    22  0005                     	;# 
    23  0006                     	;# 
    24  0007                     	;# 
    25  0008                     	;# 
    26  0009                     	;# 
    27  000A                     	;# 
    28  000B                     	;# 
    29  000C                     	;# 
    30  000D                     	;# 
    31  000E                     	;# 
    32  000F                     	;# 
    33  0010                     	;# 
    34  0011                     	;# 
    35  0012                     	;# 
    36  0013                     	;# 
    37  0015                     	;# 
    38  0016                     	;# 
    39  0016                     	;# 
    40  0017                     	;# 
    41  0018                     	;# 
    42  0019                     	;# 
    43  001A                     	;# 
    44  001B                     	;# 
    45  001C                     	;# 
    46  001E                     	;# 
    47  001F                     	;# 
    48  008C                     	;# 
    49  008D                     	;# 
    50  008E                     	;# 
    51  008F                     	;# 
    52  0090                     	;# 
    53  0091                     	;# 
    54  0092                     	;# 
    55  0093                     	;# 
    56  0095                     	;# 
    57  0096                     	;# 
    58  0097                     	;# 
    59  0098                     	;# 
    60  0099                     	;# 
    61  009A                     	;# 
    62  009B                     	;# 
    63  009B                     	;# 
    64  009C                     	;# 
    65  009D                     	;# 
    66  009E                     	;# 
    67  010C                     	;# 
    68  010D                     	;# 
    69  010E                     	;# 
    70  010F                     	;# 
    71  0110                     	;# 
    72  0111                     	;# 
    73  0112                     	;# 
    74  0113                     	;# 
    75  0114                     	;# 
    76  0115                     	;# 
    77  0116                     	;# 
    78  0117                     	;# 
    79  0118                     	;# 
    80  0119                     	;# 
    81  011A                     	;# 
    82  011B                     	;# 
    83  011D                     	;# 
    84  018C                     	;# 
    85  018D                     	;# 
    86  018F                     	;# 
    87  0190                     	;# 
    88  0191                     	;# 
    89  0191                     	;# 
    90  0192                     	;# 
    91  0193                     	;# 
    92  0193                     	;# 
    93  0193                     	;# 
    94  0194                     	;# 
    95  0195                     	;# 
    96  0196                     	;# 
    97  0199                     	;# 
    98  019A                     	;# 
    99  019B                     	;# 
   100  019B                     	;# 
   101  019B                     	;# 
   102  019B                     	;# 
   103  019C                     	;# 
   104  019C                     	;# 
   105  019D                     	;# 
   106  019E                     	;# 
   107  019F                     	;# 
   108  020D                     	;# 
   109  0210                     	;# 
   110  0211                     	;# 
   111  0212                     	;# 
   112  0213                     	;# 
   113  0214                     	;# 
   114  0215                     	;# 
   115  0215                     	;# 
   116  0216                     	;# 
   117  0217                     	;# 
   118  0291                     	;# 
   119  0291                     	;# 
   120  0292                     	;# 
   121  0293                     	;# 
   122  0294                     	;# 
   123  0295                     	;# 
   124  0295                     	;# 
   125  0296                     	;# 
   126  0298                     	;# 
   127  0298                     	;# 
   128  0299                     	;# 
   129  029A                     	;# 
   130  029B                     	;# 
   131  029C                     	;# 
   132  029C                     	;# 
   133  029D                     	;# 
   134  029E                     	;# 
   135  029F                     	;# 
   136  0311                     	;# 
   137  0311                     	;# 
   138  0312                     	;# 
   139  0313                     	;# 
   140  0314                     	;# 
   141  0315                     	;# 
   142  0315                     	;# 
   143  0316                     	;# 
   144  0318                     	;# 
   145  0318                     	;# 
   146  0319                     	;# 
   147  031A                     	;# 
   148  031C                     	;# 
   149  031C                     	;# 
   150  031D                     	;# 
   151  031E                     	;# 
   152  0394                     	;# 
   153  0395                     	;# 
   154  0396                     	;# 
   155  0415                     	;# 
   156  0416                     	;# 
   157  0417                     	;# 
   158  041C                     	;# 
   159  041D                     	;# 
   160  041E                     	;# 
   161  0791                     	;# 
   162  0792                     	;# 
   163  0793                     	;# 
   164  0794                     	;# 
   165  0795                     	;# 
   166  0798                     	;# 
   167  0799                     	;# 
   168  079A                     	;# 
   169  07A0                     	;# 
   170  07A1                     	;# 
   171  07A2                     	;# 
   172  07A3                     	;# 
   173  07A4                     	;# 
   174  07A5                     	;# 
   175  07A6                     	;# 
   176  07A7                     	;# 
   177  07A8                     	;# 
   178  07A9                     	;# 
   179  07AA                     	;# 
   180  07AB                     	;# 
   181  0FE4                     	;# 
   182  0FE5                     	;# 
   183  0FE6                     	;# 
   184  0FE7                     	;# 
   185  0FE8                     	;# 
   186  0FE9                     	;# 
   187  0FEA                     	;# 
   188  0FEB                     	;# 
   189  0FED                     	;# 
   190  0FEE                     	;# 
   191  0FEF                     	;# 
   192                           
   193                           	psect	idataBANK0
   194  0130                     __pidataBANK0:	
   195                           
   196                           ;initializer for _pod
   197  0130  3441               	retlw	65
   198  0015                     _TMR0	set	21
   199  0072                     _RC2	set	114
   200  008D                     _RCIF	set	141
   201  007C                     _RD4	set	124
   202  005D                     _TMR0IE	set	93
   203  005A                     _TMR0IF	set	90
   204  008E                     _TRISCbits	set	142
   205  008F                     _TRISDbits	set	143
   206  04A8                     _PS0	set	1192
   207  04A9                     _PS1	set	1193
   208  04AA                     _PS2	set	1194
   209  04AB                     _PSA	set	1195
   210  04AD                     _T0CS	set	1197
   211  04AC                     _T0SE	set	1196
   212  0199                     _RCREG	set	409
   213  019C                     _SPBRGH	set	412
   214  019B                     _SPBRGL	set	411
   215  0CFB                     _BRG16	set	3323
   216  0CF2                     _BRGH	set	3314
   217  0CEC                     _CREN	set	3308
   218  0CEF                     _SPEN	set	3311
   219  0CED                     _SREN	set	3309
   220  0CF4                     _SYNC	set	3316
   221  0CF5                     _TXEN	set	3317
   222                           
   223                           ; #config settings
   224  0000                     
   225                           	psect	cinit
   226  0018                     start_initialization:	
   227  0018                     __initialization:	
   228                           
   229                           ; Clear objects allocated to COMMON
   230  0018  01FD               	clrf	__pbssCOMMON& (0+127)
   231                           
   232                           ; Initialize objects allocated to BANK0
   233  0019  3181  2130         	fcall	__pidataBANK0	;fetch initializer
   234  001B  00A4               	movwf	__pdataBANK0& (0+127)
   235  001C                     end_of_initialization:	
   236                           ;End of C runtime variable initialization code
   237                           
   238  001C                     __end_of__initialization:	
   239  001C  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   240  001D  0020               	movlb	0
   241  001E  3180  28DC         	ljmp	_main	;jump to C main() function
   242                           
   243                           	psect	bssCOMMON
   244  007D                     __pbssCOMMON:	
   245  007D                     _t:	
   246  007D                     	ds	1
   247                           
   248                           	psect	dataBANK0
   249  0024                     __pdataBANK0:	
   250  0024                     _pod:	
   251  0024                     	ds	1
   252                           
   253                           	psect	cstackCOMMON
   254  0070                     __pcstackCOMMON:	
   255  0070                     ?_init:	
   256  0070                     ?_init_serial:	
   257                           ; 0 bytes @ 0x0
   258                           
   259  0070                     ?_rf_send:	
   260                           ; 0 bytes @ 0x0
   261                           
   262  0070                     ?_main:	
   263                           ; 0 bytes @ 0x0
   264                           
   265  0070                     ?_prekidna_rutina:	
   266                           ; 0 bytes @ 0x0
   267                           
   268  0070                     ?___awdiv:	
   269                           ; 0 bytes @ 0x0
   270                           
   271  0070                     ___awdiv@divisor:	
   272                           ; 2 bytes @ 0x0
   273                           
   274                           
   275                           ; 2 bytes @ 0x0
   276  0070                     	ds	2
   277  0072                     ___awdiv@dividend:	
   278                           
   279                           ; 2 bytes @ 0x2
   280  0072                     	ds	2
   281  0074                     ??___awdiv:	
   282                           
   283                           ; 0 bytes @ 0x4
   284  0074                     	ds	1
   285  0075                     ___awdiv@counter:	
   286                           
   287                           ; 1 bytes @ 0x5
   288  0075                     	ds	1
   289  0076                     ___awdiv@sign:	
   290                           
   291                           ; 1 bytes @ 0x6
   292  0076                     	ds	1
   293  0077                     ___awdiv@quotient:	
   294                           
   295                           ; 2 bytes @ 0x7
   296  0077                     	ds	2
   297  0079                     ??_rf_send:	
   298                           
   299                           ; 0 bytes @ 0x9
   300  0079                     	ds	3
   301  007C                     ??_prekidna_rutina:	
   302                           
   303                           ; 0 bytes @ 0xC
   304  007C                     	ds	1
   305                           
   306                           	psect	cstackBANK0
   307  0020                     __pcstackBANK0:	
   308  0020                     ??_init:	
   309  0020                     ??_init_serial:	
   310                           ; 0 bytes @ 0x0
   311                           
   312  0020                     ??_main:	
   313                           ; 0 bytes @ 0x0
   314                           
   315                           
   316                           ; 0 bytes @ 0x0
   317  0020                     	ds	3
   318  0023                     main@var:	
   319                           
   320                           ; 1 bytes @ 0x3
   321  0023                     	ds	1
   322                           
   323                           	psect	maintext
   324  00DC                     __pmaintext:	
   325 ;;
   326 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   327 ;;
   328 ;; *************** function _main *****************
   329 ;; Defined at:
   330 ;;		line 57 in file "main.c"
   331 ;; Parameters:    Size  Location     Type
   332 ;;		None
   333 ;; Auto vars:     Size  Location     Type
   334 ;;  var             1    3[BANK0 ] unsigned char 
   335 ;; Return value:  Size  Location     Type
   336 ;;		None               void
   337 ;; Registers used:
   338 ;;		wreg, status,2, status,0, pclath, cstack
   339 ;; Tracked objects:
   340 ;;		On entry : B1F/0
   341 ;;		On exit  : 0/0
   342 ;;		Unchanged: 0/0
   343 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   344 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   345 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
   346 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
   347 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
   348 ;;Total ram usage:        4 bytes
   349 ;; Hardware stack levels required when called:    4
   350 ;; This function calls:
   351 ;;		_init
   352 ;;		_init_serial
   353 ;; This function is called by:
   354 ;;		Startup code after reset
   355 ;; This function uses a non-reentrant model
   356 ;;
   357                           
   358                           
   359                           ;psect for function _main
   360  00DC                     _main:	
   361                           
   362                           ;main.c: 58: init();
   363                           
   364                           ;incstack = 0
   365                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   366  00DC  3181  2113  3180   	fcall	_init
   367                           
   368                           ;main.c: 59: init_serial();
   369  00DF  3181  2124  3180   	fcall	_init_serial
   370  00E2                     l778:	
   371                           ;main.c: 60: while(1) {
   372                           
   373                           
   374                           ;main.c: 61: if(RCIF) {
   375  00E2  0020               	movlb	0	; select bank0
   376  00E3  1E91               	btfss	17,5	;volatile
   377  00E4  2910               	goto	l794
   378                           
   379                           ;main.c: 62: char var = RCREG;
   380  00E5  0023               	movlb	3	; select bank3
   381  00E6  0819               	movf	25,w	;volatile
   382  00E7  0020               	movlb	0	; select bank0
   383  00E8  00A0               	movwf	??_main
   384  00E9  0820               	movf	??_main,w
   385  00EA  00A3               	movwf	main@var
   386                           
   387                           ;main.c: 63: if(var == 'a') {
   388  00EB  3061               	movlw	97
   389  00EC  0623               	xorwf	main@var,w
   390  00ED  1D03               	btfss	3,2
   391  00EE  28FE               	goto	l788
   392                           
   393                           ;main.c: 64: RD4 = 1;
   394  00EF  160F               	bsf	15,4	;volatile
   395                           
   396                           ;main.c: 65: _delay((unsigned long)((2000)*(8000000/4000.0)));
   397  00F0  3015               	movlw	21
   398  00F1  00A2               	movwf	??_main+2
   399  00F2  304B               	movlw	75
   400  00F3  00A1               	movwf	??_main+1
   401  00F4  30D1               	movlw	209
   402  00F5  00A0               	movwf	??_main
   403  00F6                     u517:	
   404  00F6  0BA0               	decfsz	??_main,f
   405  00F7  28F6               	goto	u517
   406  00F8  0BA1               	decfsz	??_main+1,f
   407  00F9  28F6               	goto	u517
   408  00FA  0BA2               	decfsz	??_main+2,f
   409  00FB  28F6               	goto	u517
   410  00FC  0000               	nop
   411                           
   412                           ;main.c: 66: }
   413  00FD  2910               	goto	l794
   414  00FE                     l788:	
   415                           
   416                           ;main.c: 67: else if (var == 'b') {
   417  00FE  3062               	movlw	98
   418  00FF  0020               	movlb	0	; select bank0
   419  0100  0623               	xorwf	main@var,w
   420  0101  1D03               	btfss	3,2
   421  0102  2910               	goto	l794
   422                           
   423                           ;main.c: 68: RD4 = 1;
   424  0103  160F               	bsf	15,4	;volatile
   425                           
   426                           ;main.c: 69: _delay((unsigned long)((5000)*(8000000/4000.0)));
   427  0104  3033               	movlw	51
   428  0105  00A2               	movwf	??_main+2
   429  0106  30BC               	movlw	188
   430  0107  00A1               	movwf	??_main+1
   431  0108  3010               	movlw	16
   432  0109  00A0               	movwf	??_main
   433  010A                     u527:	
   434  010A  0BA0               	decfsz	??_main,f
   435  010B  290A               	goto	u527
   436  010C  0BA1               	decfsz	??_main+1,f
   437  010D  290A               	goto	u527
   438  010E  0BA2               	decfsz	??_main+2,f
   439  010F  290A               	goto	u527
   440  0110                     l794:	
   441                           
   442                           ;main.c: 70: }
   443                           ;main.c: 72: }
   444                           ;main.c: 73: RD4 = 0;
   445  0110  0020               	movlb	0	; select bank0
   446  0111  120F               	bcf	15,4	;volatile
   447  0112  28E2               	goto	l778
   448  0113                     __end_of_main:	
   449                           
   450                           	psect	text1
   451  0124                     __ptext1:	
   452 ;; *************** function _init_serial *****************
   453 ;; Defined at:
   454 ;;		line 138 in file "main.c"
   455 ;; Parameters:    Size  Location     Type
   456 ;;		None
   457 ;; Auto vars:     Size  Location     Type
   458 ;;		None
   459 ;; Return value:  Size  Location     Type
   460 ;;		None               void
   461 ;; Registers used:
   462 ;;		wreg, status,2
   463 ;; Tracked objects:
   464 ;;		On entry : 0/0
   465 ;;		On exit  : 0/0
   466 ;;		Unchanged: 0/0
   467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   468 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   469 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   471 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   472 ;;Total ram usage:        0 bytes
   473 ;; Hardware stack levels used:    1
   474 ;; Hardware stack levels required when called:    3
   475 ;; This function calls:
   476 ;;		Nothing
   477 ;; This function is called by:
   478 ;;		_main
   479 ;; This function uses a non-reentrant model
   480 ;;
   481                           
   482                           
   483                           ;psect for function _init_serial
   484  0124                     _init_serial:	
   485                           
   486                           ;main.c: 139: SPEN = 1;
   487                           
   488                           ;incstack = 0
   489                           ; Regs used in _init_serial: [wreg+status,2]
   490  0124  0023               	movlb	3	; select bank3
   491  0125  179D               	bsf	29,7	;volatile
   492                           
   493                           ;main.c: 140: SYNC = 0;
   494  0126  121E               	bcf	30,4	;volatile
   495                           
   496                           ;main.c: 141: BRG16 = 0;
   497  0127  119F               	bcf	31,3	;volatile
   498                           
   499                           ;main.c: 142: BRGH = 1;
   500  0128  151E               	bsf	30,2	;volatile
   501                           
   502                           ;main.c: 143: SPBRGH = 0x00;
   503  0129  019C               	clrf	28	;volatile
   504                           
   505                           ;main.c: 144: SPBRGL = 51;
   506  012A  3033               	movlw	51
   507  012B  009B               	movwf	27	;volatile
   508                           
   509                           ;main.c: 145: CREN = 1;
   510  012C  161D               	bsf	29,4	;volatile
   511                           
   512                           ;main.c: 146: SREN = 1;
   513  012D  169D               	bsf	29,5	;volatile
   514                           
   515                           ;main.c: 147: TXEN = 1;
   516  012E  169E               	bsf	30,5	;volatile
   517  012F  0008               	return
   518  0130                     __end_of_init_serial:	
   519                           
   520                           	psect	text2
   521  0113                     __ptext2:	
   522 ;; *************** function _init *****************
   523 ;; Defined at:
   524 ;;		line 89 in file "main.c"
   525 ;; Parameters:    Size  Location     Type
   526 ;;		None
   527 ;; Auto vars:     Size  Location     Type
   528 ;;		None
   529 ;; Return value:  Size  Location     Type
   530 ;;		None               void
   531 ;; Registers used:
   532 ;;		wreg
   533 ;; Tracked objects:
   534 ;;		On entry : 0/0
   535 ;;		On exit  : 0/0
   536 ;;		Unchanged: 0/0
   537 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   538 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   539 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   540 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   541 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   542 ;;Total ram usage:        0 bytes
   543 ;; Hardware stack levels used:    1
   544 ;; Hardware stack levels required when called:    3
   545 ;; This function calls:
   546 ;;		Nothing
   547 ;; This function is called by:
   548 ;;		_main
   549 ;; This function uses a non-reentrant model
   550 ;;
   551                           
   552                           
   553                           ;psect for function _init
   554  0113                     _init:	
   555                           
   556                           ;main.c: 91: TRISCbits.TRISC2 = 0;
   557                           
   558                           ;incstack = 0
   559                           ; Regs used in _init: [wreg]
   560  0113  0021               	movlb	1	; select bank1
   561  0114  110E               	bcf	14,2	;volatile
   562                           
   563                           ;main.c: 92: RC2 = 1;
   564  0115  0020               	movlb	0	; select bank0
   565  0116  150E               	bsf	14,2	;volatile
   566                           
   567                           ;main.c: 93: TRISDbits.TRISD4 = 0;
   568  0117  0021               	movlb	1	; select bank1
   569  0118  120F               	bcf	15,4	;volatile
   570                           
   571                           ;main.c: 98: T0CS = 0;
   572  0119  1295               	bcf	21,5	;volatile
   573                           
   574                           ;main.c: 99: T0SE = 1;
   575  011A  1615               	bsf	21,4	;volatile
   576                           
   577                           ;main.c: 100: PSA = 0;
   578  011B  1195               	bcf	21,3	;volatile
   579                           
   580                           ;main.c: 101: PS2 = 0;
   581  011C  1115               	bcf	21,2	;volatile
   582                           
   583                           ;main.c: 102: PS1 = 0;
   584  011D  1095               	bcf	21,1	;volatile
   585                           
   586                           ;main.c: 103: PS0 = 1;
   587  011E  1415               	bsf	21,0	;volatile
   588                           
   589                           ;main.c: 104: TMR0 = 6;
   590  011F  3006               	movlw	6
   591  0120  0020               	movlb	0	; select bank0
   592  0121  0095               	movwf	21	;volatile
   593                           
   594                           ;main.c: 105: TMR0IE = 1;
   595  0122  168B               	bsf	11,5	;volatile
   596  0123  0008               	return
   597  0124                     __end_of_init:	
   598                           
   599                           	psect	intentry
   600  0004                     __pintentry:	
   601 ;; *************** function _prekidna_rutina *****************
   602 ;; Defined at:
   603 ;;		line 79 in file "main.c"
   604 ;; Parameters:    Size  Location     Type
   605 ;;		None
   606 ;; Auto vars:     Size  Location     Type
   607 ;;		None
   608 ;; Return value:  Size  Location     Type
   609 ;;		None               void
   610 ;; Registers used:
   611 ;;		wreg, status,2, status,0, pclath, cstack
   612 ;; Tracked objects:
   613 ;;		On entry : 0/0
   614 ;;		On exit  : 0/0
   615 ;;		Unchanged: 0/0
   616 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   617 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   618 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   619 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   620 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   621 ;;Total ram usage:        1 bytes
   622 ;; Hardware stack levels used:    1
   623 ;; Hardware stack levels required when called:    2
   624 ;; This function calls:
   625 ;;		_rf_send
   626 ;; This function is called by:
   627 ;;		Interrupt level 1
   628 ;; This function uses a non-reentrant model
   629 ;;
   630                           
   631  0004                     _prekidna_rutina:	
   632                           
   633                           ;incstack = 0
   634                           ; Regs used in _prekidna_rutina: [wreg+status,2+status,0+pclath+cstack]
   635  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
   636  0005  3180               	pagesel	$
   637  0006  0020               	movlb	0	; select bank0
   638  0007  087F               	movf	127,w
   639  0008  00FC               	movwf	??_prekidna_rutina
   640                           
   641                           ;main.c: 81: if(TMR0IE && TMR0IF)
   642  0009  1A8B               	btfsc	11,5	;volatile
   643  000A  1D0B               	btfss	11,2	;volatile
   644  000B  2811               	goto	i1l74
   645                           
   646                           ;main.c: 82: {
   647                           ;main.c: 83: TMR0 = 6;
   648  000C  3006               	movlw	6
   649  000D  0095               	movwf	21	;volatile
   650                           
   651                           ;main.c: 84: TMR0IF = 0;
   652  000E  110B               	bcf	11,2	;volatile
   653                           
   654                           ;main.c: 85: rf_send();
   655  000F  3180  2020         	fcall	_rf_send
   656  0011                     i1l74:	
   657  0011  087C               	movf	??_prekidna_rutina,w
   658  0012  0020               	movlb	0	; select bank0
   659  0013  00FF               	movwf	127
   660  0014  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
   661  0015  0009               	retfie
   662  0016                     __end_of_prekidna_rutina:	
   663                           
   664                           	psect	text4
   665  0020                     __ptext4:	
   666 ;; *************** function _rf_send *****************
   667 ;; Defined at:
   668 ;;		line 108 in file "main.c"
   669 ;; Parameters:    Size  Location     Type
   670 ;;		None
   671 ;; Auto vars:     Size  Location     Type
   672 ;;		None
   673 ;; Return value:  Size  Location     Type
   674 ;;		None               void
   675 ;; Registers used:
   676 ;;		wreg, status,2, status,0, pclath, cstack
   677 ;; Tracked objects:
   678 ;;		On entry : 0/0
   679 ;;		On exit  : 0/0
   680 ;;		Unchanged: 0/0
   681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   682 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   683 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   684 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   685 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   686 ;;Total ram usage:        3 bytes
   687 ;; Hardware stack levels used:    1
   688 ;; Hardware stack levels required when called:    1
   689 ;; This function calls:
   690 ;;		___awdiv
   691 ;; This function is called by:
   692 ;;		_prekidna_rutina
   693 ;; This function uses a non-reentrant model
   694 ;;
   695                           
   696                           
   697                           ;psect for function _rf_send
   698  0020                     _rf_send:	
   699                           
   700                           ;main.c: 110: if (t == 0) RC2 = 1;
   701                           
   702                           ;incstack = 0
   703                           ; Regs used in _rf_send: [wreg+status,2+status,0+pclath+cstack]
   704  0020  087D               	movf	_t,w
   705  0021  1903               	btfsc	3,2
   706  0022  282F               	goto	i1l754
   707                           
   708                           ;main.c: 111: else if (t < 10) RC2 = !RC2;
   709  0023  300A               	movlw	10
   710  0024  027D               	subwf	_t,w
   711  0025  1803               	skipnc
   712  0026  282B               	goto	i1l752
   713  0027  3004               	movlw	4
   714  0028  0020               	movlb	0	; select bank0
   715  0029  068E               	xorwf	14,f
   716  002A  2873               	goto	i1l768
   717  002B                     i1l752:	
   718                           
   719                           ;main.c: 112: else if (t < 16) RC2 = 1;
   720  002B  3010               	movlw	16
   721  002C  027D               	subwf	_t,w
   722  002D  1803               	skipnc
   723  002E  2831               	goto	i1l756
   724  002F                     i1l754:	
   725  002F  0020               	movlb	0	; select bank0
   726  0030  2872               	goto	i1l92
   727  0031                     i1l756:	
   728                           
   729                           ;main.c: 113: else if (t < 17) RC2 = 0;
   730  0031  3011               	movlw	17
   731  0032  027D               	subwf	_t,w
   732  0033  1803               	skipnc
   733  0034  2837               	goto	i1l86
   734  0035  0020               	movlb	0	; select bank0
   735  0036  2870               	goto	i1l766
   736  0037                     i1l86:	
   737                           
   738                           ;main.c: 114: else
   739                           ;main.c: 115: {
   740                           ;main.c: 116: if (t%2 == 1)
   741  0037  1C7D               	btfss	_t,0
   742  0038  2855               	goto	i1l764
   743                           
   744                           ;main.c: 117: {
   745                           ;main.c: 118: if (((pod) & (1 << ((t - 17)/2)))) RC2 = 1;
   746  0039  3001               	movlw	1
   747  003A  00F9               	movwf	??_rf_send
   748  003B  3002               	movlw	2
   749  003C  00F0               	movwf	___awdiv@divisor
   750  003D  3000               	movlw	0
   751  003E  00F1               	movwf	___awdiv@divisor+1
   752  003F  087D               	movf	_t,w
   753  0040  3EEF               	addlw	239
   754  0041  00F2               	movwf	___awdiv@dividend
   755  0042  30FF               	movlw	255
   756  0043  1803               	skipnc
   757  0044  3000               	movlw	0
   758  0045  00F3               	movwf	___awdiv@dividend+1
   759  0046  3180  208B  3180   	fcall	___awdiv
   760  0049  0870               	movf	?___awdiv,w
   761  004A  0A89               	incf	9,f
   762  004B  284D               	goto	u41_24
   763  004C                     u41_25:	
   764  004C  35F9               	lslf	??_rf_send,f
   765  004D                     u41_24:	
   766  004D  0B89               	decfsz	9,f
   767  004E  284C               	goto	u41_25
   768  004F  0879               	movf	??_rf_send,w
   769  0050  0020               	movlb	0	; select bank0
   770  0051  0524               	andwf	_pod,w
   771  0052  1903               	btfsc	3,2
   772  0053  2870               	goto	i1l766
   773  0054  2872               	goto	i1l92
   774  0055                     i1l764:	
   775                           ;main.c: 120: }
   776                           
   777                           ;main.c: 119: else RC2 = 0;
   778                           
   779                           
   780                           ;main.c: 121: else
   781                           ;main.c: 122: {
   782                           ;main.c: 123: if (((pod) & (1 << ((t - 17)/2)))) RC2 = 0;
   783  0055  3001               	movlw	1
   784  0056  00F9               	movwf	??_rf_send
   785  0057  3002               	movlw	2
   786  0058  00F0               	movwf	___awdiv@divisor
   787  0059  3000               	movlw	0
   788  005A  00F1               	movwf	___awdiv@divisor+1
   789  005B  087D               	movf	_t,w
   790  005C  3EEF               	addlw	239
   791  005D  00F2               	movwf	___awdiv@dividend
   792  005E  30FF               	movlw	255
   793  005F  1803               	skipnc
   794  0060  3000               	movlw	0
   795  0061  00F3               	movwf	___awdiv@dividend+1
   796  0062  3180  208B  3180   	fcall	___awdiv
   797  0065  0870               	movf	?___awdiv,w
   798  0066  0A89               	incf	9,f
   799  0067  2869               	goto	u43_24
   800  0068                     u43_25:	
   801  0068  35F9               	lslf	??_rf_send,f
   802  0069                     u43_24:	
   803  0069  0B89               	decfsz	9,f
   804  006A  2868               	goto	u43_25
   805  006B  0879               	movf	??_rf_send,w
   806  006C  0020               	movlb	0	; select bank0
   807  006D  0524               	andwf	_pod,w
   808  006E  1903               	btfsc	3,2
   809  006F  2872               	goto	i1l92
   810  0070                     i1l766:	
   811  0070  110E               	bcf	14,2	;volatile
   812  0071  2873               	goto	i1l768
   813  0072                     i1l92:	
   814                           
   815                           ;main.c: 124: else RC2 = 1;
   816  0072  150E               	bsf	14,2	;volatile
   817  0073                     i1l768:	
   818                           
   819                           ;main.c: 125: }
   820                           ;main.c: 126: }
   821                           ;main.c: 127: t++;
   822  0073  3001               	movlw	1
   823  0074  00F9               	movwf	??_rf_send
   824  0075  0879               	movf	??_rf_send,w
   825  0076  07FD               	addwf	_t,f
   826                           
   827                           ;main.c: 128: if (t == 34)
   828  0077  3022               	movlw	34
   829  0078  067D               	xorwf	_t,w
   830  0079  1D03               	btfss	3,2
   831  007A  0008               	return
   832                           
   833                           ;main.c: 129: {
   834                           ;main.c: 130: RC2 = 0;
   835  007B  110E               	bcf	14,2	;volatile
   836                           
   837                           ;main.c: 131: t = 0;
   838  007C  01FD               	clrf	_t
   839                           
   840                           ;main.c: 132: _delay((unsigned long)((1000)*(8000000/4000.0)));
   841  007D  300B               	movlw	11
   842  007E  00FB               	movwf	??_rf_send+2
   843  007F  3026               	movlw	38
   844  0080  00FA               	movwf	??_rf_send+1
   845  0081  3066               	movlw	102
   846  0082  00F9               	movwf	??_rf_send
   847  0083                     u53_27:	
   848  0083  0BF9               	decfsz	??_rf_send,f
   849  0084  2883               	goto	u53_27
   850  0085  0BFA               	decfsz	??_rf_send+1,f
   851  0086  2883               	goto	u53_27
   852  0087  0BFB               	decfsz	??_rf_send+2,f
   853  0088  2883               	goto	u53_27
   854  0089  3200               	nop2
   855  008A  0008               	return
   856  008B                     __end_of_rf_send:	
   857                           
   858                           	psect	text5
   859  008B                     __ptext5:	
   860 ;; *************** function ___awdiv *****************
   861 ;; Defined at:
   862 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
   863 ;; Parameters:    Size  Location     Type
   864 ;;  divisor         2    0[COMMON] int 
   865 ;;  dividend        2    2[COMMON] int 
   866 ;; Auto vars:     Size  Location     Type
   867 ;;  quotient        2    7[COMMON] int 
   868 ;;  sign            1    6[COMMON] unsigned char 
   869 ;;  counter         1    5[COMMON] unsigned char 
   870 ;; Return value:  Size  Location     Type
   871 ;;                  2    0[COMMON] int 
   872 ;; Registers used:
   873 ;;		wreg, status,2, status,0
   874 ;; Tracked objects:
   875 ;;		On entry : 0/0
   876 ;;		On exit  : 0/0
   877 ;;		Unchanged: 0/0
   878 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   879 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   880 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   881 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   882 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   883 ;;Total ram usage:        9 bytes
   884 ;; Hardware stack levels used:    1
   885 ;; This function calls:
   886 ;;		Nothing
   887 ;; This function is called by:
   888 ;;		_rf_send
   889 ;; This function uses a non-reentrant model
   890 ;;
   891                           
   892                           
   893                           ;psect for function ___awdiv
   894  008B                     ___awdiv:	
   895                           
   896                           ;incstack = 0
   897                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
   898  008B  01F6               	clrf	___awdiv@sign
   899  008C  1FF1               	btfss	___awdiv@divisor+1,7
   900  008D  2895               	goto	i1l690
   901  008E  09F0               	comf	___awdiv@divisor,f
   902  008F  09F1               	comf	___awdiv@divisor+1,f
   903  0090  0AF0               	incf	___awdiv@divisor,f
   904  0091  1903               	skipnz
   905  0092  0AF1               	incf	___awdiv@divisor+1,f
   906  0093  01F6               	clrf	___awdiv@sign
   907  0094  0AF6               	incf	___awdiv@sign,f
   908  0095                     i1l690:	
   909  0095  1FF3               	btfss	___awdiv@dividend+1,7
   910  0096  28A0               	goto	i1l696
   911  0097  09F2               	comf	___awdiv@dividend,f
   912  0098  09F3               	comf	___awdiv@dividend+1,f
   913  0099  0AF2               	incf	___awdiv@dividend,f
   914  009A  1903               	skipnz
   915  009B  0AF3               	incf	___awdiv@dividend+1,f
   916  009C  3001               	movlw	1
   917  009D  00F4               	movwf	??___awdiv
   918  009E  0874               	movf	??___awdiv,w
   919  009F  06F6               	xorwf	___awdiv@sign,f
   920  00A0                     i1l696:	
   921  00A0  01F7               	clrf	___awdiv@quotient
   922  00A1  01F8               	clrf	___awdiv@quotient+1
   923  00A2  0870               	movf	___awdiv@divisor,w
   924  00A3  0471               	iorwf	___awdiv@divisor+1,w
   925  00A4  1903               	btfsc	3,2
   926  00A5  28CF               	goto	i1l718
   927  00A6  01F5               	clrf	___awdiv@counter
   928  00A7  0AF5               	incf	___awdiv@counter,f
   929  00A8                     i1l706:	
   930  00A8  1BF1               	btfsc	___awdiv@divisor+1,7
   931  00A9  28B4               	goto	i1l708
   932  00AA  3001               	movlw	1
   933  00AB                     u29_25:	
   934  00AB  35F0               	lslf	___awdiv@divisor,f
   935  00AC  0DF1               	rlf	___awdiv@divisor+1,f
   936  00AD  0B89               	decfsz	9,f
   937  00AE  28AB               	goto	u29_25
   938  00AF  3001               	movlw	1
   939  00B0  00F4               	movwf	??___awdiv
   940  00B1  0874               	movf	??___awdiv,w
   941  00B2  07F5               	addwf	___awdiv@counter,f
   942  00B3  28A8               	goto	i1l706
   943  00B4                     i1l708:	
   944  00B4  3001               	movlw	1
   945  00B5                     u31_25:	
   946  00B5  35F7               	lslf	___awdiv@quotient,f
   947  00B6  0DF8               	rlf	___awdiv@quotient+1,f
   948  00B7  0B89               	decfsz	9,f
   949  00B8  28B5               	goto	u31_25
   950  00B9  0871               	movf	___awdiv@divisor+1,w
   951  00BA  0273               	subwf	___awdiv@dividend+1,w
   952  00BB  1D03               	skipz
   953  00BC  28BF               	goto	u32_25
   954  00BD  0870               	movf	___awdiv@divisor,w
   955  00BE  0272               	subwf	___awdiv@dividend,w
   956  00BF                     u32_25:	
   957  00BF  1C03               	skipc
   958  00C0  28C6               	goto	i1l714
   959  00C1  0870               	movf	___awdiv@divisor,w
   960  00C2  02F2               	subwf	___awdiv@dividend,f
   961  00C3  0871               	movf	___awdiv@divisor+1,w
   962  00C4  3BF3               	subwfb	___awdiv@dividend+1,f
   963  00C5  1477               	bsf	___awdiv@quotient,0
   964  00C6                     i1l714:	
   965  00C6  3001               	movlw	1
   966  00C7                     u33_25:	
   967  00C7  36F1               	lsrf	___awdiv@divisor+1,f
   968  00C8  0CF0               	rrf	___awdiv@divisor,f
   969  00C9  0B89               	decfsz	9,f
   970  00CA  28C7               	goto	u33_25
   971  00CB  3001               	movlw	1
   972  00CC  02F5               	subwf	___awdiv@counter,f
   973  00CD  1D03               	btfss	3,2
   974  00CE  28B4               	goto	i1l708
   975  00CF                     i1l718:	
   976  00CF  0876               	movf	___awdiv@sign,w
   977  00D0  1903               	btfsc	3,2
   978  00D1  28D7               	goto	i1l722
   979  00D2  09F7               	comf	___awdiv@quotient,f
   980  00D3  09F8               	comf	___awdiv@quotient+1,f
   981  00D4  0AF7               	incf	___awdiv@quotient,f
   982  00D5  1903               	skipnz
   983  00D6  0AF8               	incf	___awdiv@quotient+1,f
   984  00D7                     i1l722:	
   985  00D7  0878               	movf	___awdiv@quotient+1,w
   986  00D8  00F1               	movwf	?___awdiv+1
   987  00D9  0877               	movf	___awdiv@quotient,w
   988  00DA  00F0               	movwf	?___awdiv
   989  00DB  0008               	return
   990  00DC                     __end_of___awdiv:	
   991  007E                     btemp	set	126	;btemp
   992  007E                     int$flags	set	126
   993  007E                     wtemp	set	126
   994  007E                     wtemp0	set	126
   995  0080                     wtemp1	set	128
   996  0082                     wtemp2	set	130
   997  0084                     wtemp3	set	132
   998  0086                     wtemp4	set	134
   999  0088                     wtemp5	set	136
  1000  007F                     wtemp6	set	127
  1001  007E                     ttemp	set	126
  1002  007E                     ttemp0	set	126
  1003  0081                     ttemp1	set	129
  1004  0084                     ttemp2	set	132
  1005  0087                     ttemp3	set	135
  1006  007F                     ttemp4	set	127
  1007  007E                     ltemp	set	126
  1008  007E                     ltemp0	set	126
  1009  0082                     ltemp1	set	130
  1010  0086                     ltemp2	set	134
  1011  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80      4       5
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _prekidna_rutina in COMMON

    _prekidna_rutina->_rf_send
    _rf_send->___awdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _prekidna_rutina in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _prekidna_rutina in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _prekidna_rutina in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _prekidna_rutina in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _prekidna_rutina in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _prekidna_rutina in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _prekidna_rutina in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _prekidna_rutina in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _prekidna_rutina in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _prekidna_rutina in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _prekidna_rutina in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _prekidna_rutina in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _prekidna_rutina in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0      45
                                              0 BANK0      4     4      0
                               _init
                        _init_serial
 ---------------------------------------------------------------------------------
 (1) _init_serial                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _prekidna_rutina                                      1     1      0     512
                                             12 COMMON     1     1      0
                            _rf_send
 ---------------------------------------------------------------------------------
 (3) _rf_send                                              3     3      0     512
                                              9 COMMON     3     3      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              9     5      4     512
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init
   _init_serial

 _prekidna_rutina (ROOT)
   _rf_send
     ___awdiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      D       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      4       5       5        6.3%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      13      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      13      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Sat Apr 09 11:09:15 2016

                       _t 007D               __CFG_CP$OFF 0000              ___awdiv@sign 0076  
                     l794 0110                       l778 00E2                       l788 00FE  
                     _RC2 0072                       _RD4 007C                       _PS0 04A8  
                     _PS1 04A9                       _PS2 04AA              __CFG_CPD$OFF 0000  
                     u517 00F6                       u527 010A                       _PSA 04AB  
                     _pod 0024              __CFG_BORV$LO 0000                       wreg 0009  
            __CFG_FOSC$HS 0000              __CFG_LVP$OFF 0000                      _BRGH 0CF2  
                    _CREN 0CEC                      _T0CS 04AD                      _T0SE 04AC  
                    _RCIF 008D                      i1l74 0011                      i1l92 0072  
                    i1l86 0037                      _TMR0 0015                      _SPEN 0CEF  
                    _SREN 0CED                      _TXEN 0CF5                      _SYNC 0CF4  
            __CFG_WRT$OFF 0000                      _main 00DC                      _init 0113  
                    btemp 007E                      ltemp 007E                      start 0016  
                    ttemp 007E                      wtemp 007E             __CFG_IESO$OFF 0000  
           __CFG_MCLRE$ON 0000                     ?_main 0070                     ?_init 0070  
         __end_of___awdiv 00DC                     _BRG16 0CFB             __CFG_WDTE$OFF 0000  
         ___awdiv@divisor 0070                     i1l722 00D7                     i1l714 00C6  
                   i1l706 00A8                     i1l708 00B4                     i1l718 00CF  
                   i1l752 002B                     i1l690 0095                     i1l754 002F  
                   i1l764 0055                     i1l756 0031                     i1l766 0070  
                   i1l696 00A0                     i1l768 0073           ___awdiv@counter 0075  
                   _RCREG 0199                     u31_25 00B5                     u32_25 00BF  
                   u41_24 004D                     u33_25 00C7                     u41_25 004C  
                   u43_24 0069                     u43_25 0068                     u29_25 00AB  
                   u53_27 0083              ?_init_serial 0070            __CFG_FCMEN$OFF 0000  
         __end_of_rf_send 008B            __CFG_BOREN$OFF 0000                     ltemp0 007E  
                   ltemp1 0082                     ltemp2 0086                     ltemp3 0080  
                   ttemp0 007E                     ttemp1 0081                     ttemp2 0084  
                   ttemp3 0087                     ttemp4 007F                     status 0003  
                   wtemp0 007E                     wtemp1 0080                     wtemp2 0082  
                   wtemp3 0084                     wtemp4 0086                     wtemp5 0088  
                   wtemp6 007F           __initialization 0018              __end_of_main 0113  
            __end_of_init 0124                    ??_main 0020                    ??_init 0020  
          __CFG_PLLEN$OFF 0000          ___awdiv@dividend 0072                    _TMR0IE 005D  
                  _TMR0IF 005A                    _SPBRGH 019C                    _SPBRGL 019B  
          __CFG_PWRTE$OFF 0000                 ??___awdiv 0074           _prekidna_rutina 0004  
        ___awdiv@quotient 0077                 ??_rf_send 0079   __end_of__initialization 001C  
          __pcstackCOMMON 0070              __pidataBANK0 0130      __size_of_init_serial 000C  
         __CFG_VCAPEN$OFF 0000   __end_of_prekidna_rutina 0016                __pmaintext 00DC  
              __pintentry 0004                   ___awdiv 008B           __CFG_STVREN$OFF 0000  
                 __ptext1 0124                   __ptext2 0113                   __ptext4 0020  
                 __ptext5 008B                   _rf_send 0020                   main@var 0023  
    end_of_initialization 001C          ?_prekidna_rutina 0070                 _TRISCbits 008E  
               _TRISDbits 008F       start_initialization 0018               __pdataBANK0 0024  
           ??_init_serial 0020               __pbssCOMMON 007D                 ___latbits 0003  
           __pcstackBANK0 0020                  ?___awdiv 0070                  ?_rf_send 0070  
     __end_of_init_serial 0130          __size_of___awdiv 0051  __size_of_prekidna_rutina 0012  
             _init_serial 0124          __size_of_rf_send 006B             __size_of_main 0037  
           __size_of_init 0011                  int$flags 007E                  intlevel1 0000  
       __CFG_CLKOUTEN$OFF 0000         ??_prekidna_rutina 007C  
