

Microchip Technology PIC LITE Macro Assembler V1.35 build -356382666 
                                                                                               Fri Feb 26 10:56:13 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	16F1939
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	intentry,global,class=CODE,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	dabs	1,0x7E,2
    19  0000                     	;# 
    20  0001                     	;# 
    21  0002                     	;# 
    22  0003                     	;# 
    23  0004                     	;# 
    24  0005                     	;# 
    25  0006                     	;# 
    26  0007                     	;# 
    27  0008                     	;# 
    28  0009                     	;# 
    29  000A                     	;# 
    30  000B                     	;# 
    31  000C                     	;# 
    32  000D                     	;# 
    33  000E                     	;# 
    34  000F                     	;# 
    35  0010                     	;# 
    36  0011                     	;# 
    37  0012                     	;# 
    38  0013                     	;# 
    39  0015                     	;# 
    40  0016                     	;# 
    41  0016                     	;# 
    42  0017                     	;# 
    43  0018                     	;# 
    44  0019                     	;# 
    45  001A                     	;# 
    46  001B                     	;# 
    47  001C                     	;# 
    48  001E                     	;# 
    49  001F                     	;# 
    50  008C                     	;# 
    51  008D                     	;# 
    52  008E                     	;# 
    53  008F                     	;# 
    54  0090                     	;# 
    55  0091                     	;# 
    56  0092                     	;# 
    57  0093                     	;# 
    58  0095                     	;# 
    59  0096                     	;# 
    60  0097                     	;# 
    61  0098                     	;# 
    62  0099                     	;# 
    63  009A                     	;# 
    64  009B                     	;# 
    65  009B                     	;# 
    66  009C                     	;# 
    67  009D                     	;# 
    68  009E                     	;# 
    69  010C                     	;# 
    70  010D                     	;# 
    71  010E                     	;# 
    72  010F                     	;# 
    73  0110                     	;# 
    74  0111                     	;# 
    75  0112                     	;# 
    76  0113                     	;# 
    77  0114                     	;# 
    78  0115                     	;# 
    79  0116                     	;# 
    80  0117                     	;# 
    81  0118                     	;# 
    82  0119                     	;# 
    83  011A                     	;# 
    84  011B                     	;# 
    85  011D                     	;# 
    86  018C                     	;# 
    87  018D                     	;# 
    88  018F                     	;# 
    89  0190                     	;# 
    90  0191                     	;# 
    91  0191                     	;# 
    92  0192                     	;# 
    93  0193                     	;# 
    94  0193                     	;# 
    95  0193                     	;# 
    96  0194                     	;# 
    97  0195                     	;# 
    98  0196                     	;# 
    99  0199                     	;# 
   100  019A                     	;# 
   101  019B                     	;# 
   102  019B                     	;# 
   103  019B                     	;# 
   104  019B                     	;# 
   105  019C                     	;# 
   106  019C                     	;# 
   107  019D                     	;# 
   108  019E                     	;# 
   109  019F                     	;# 
   110  020D                     	;# 
   111  0210                     	;# 
   112  0211                     	;# 
   113  0212                     	;# 
   114  0213                     	;# 
   115  0214                     	;# 
   116  0215                     	;# 
   117  0215                     	;# 
   118  0216                     	;# 
   119  0217                     	;# 
   120  0291                     	;# 
   121  0291                     	;# 
   122  0292                     	;# 
   123  0293                     	;# 
   124  0294                     	;# 
   125  0295                     	;# 
   126  0295                     	;# 
   127  0296                     	;# 
   128  0298                     	;# 
   129  0298                     	;# 
   130  0299                     	;# 
   131  029A                     	;# 
   132  029B                     	;# 
   133  029C                     	;# 
   134  029C                     	;# 
   135  029D                     	;# 
   136  029E                     	;# 
   137  029F                     	;# 
   138  0311                     	;# 
   139  0311                     	;# 
   140  0312                     	;# 
   141  0313                     	;# 
   142  0314                     	;# 
   143  0315                     	;# 
   144  0315                     	;# 
   145  0316                     	;# 
   146  0318                     	;# 
   147  0318                     	;# 
   148  0319                     	;# 
   149  031A                     	;# 
   150  031C                     	;# 
   151  031C                     	;# 
   152  031D                     	;# 
   153  031E                     	;# 
   154  0394                     	;# 
   155  0395                     	;# 
   156  0396                     	;# 
   157  0415                     	;# 
   158  0416                     	;# 
   159  0417                     	;# 
   160  041C                     	;# 
   161  041D                     	;# 
   162  041E                     	;# 
   163  0791                     	;# 
   164  0792                     	;# 
   165  0793                     	;# 
   166  0794                     	;# 
   167  0795                     	;# 
   168  0798                     	;# 
   169  0799                     	;# 
   170  079A                     	;# 
   171  07A0                     	;# 
   172  07A1                     	;# 
   173  07A2                     	;# 
   174  07A3                     	;# 
   175  07A4                     	;# 
   176  07A5                     	;# 
   177  07A6                     	;# 
   178  07A7                     	;# 
   179  07A8                     	;# 
   180  07A9                     	;# 
   181  07AA                     	;# 
   182  07AB                     	;# 
   183  0FE4                     	;# 
   184  0FE5                     	;# 
   185  0FE6                     	;# 
   186  0FE7                     	;# 
   187  0FE8                     	;# 
   188  0FE9                     	;# 
   189  0FEA                     	;# 
   190  0FEB                     	;# 
   191  0FED                     	;# 
   192  0FEE                     	;# 
   193  0FEF                     	;# 
   194                           
   195                           	psect	idataBANK0
   196  00F5                     __pidataBANK0:	
   197                           
   198                           ;initializer for _pageri
   199  00F5  3450               	retlw	80
   200  00F6  3441               	retlw	65
   201  00F7  3447               	retlw	71
   202  00F8  3445               	retlw	69
   203  00F9  3452               	retlw	82
   204  00FA  3449               	retlw	73
   205  00FB  342E               	retlw	46
   206  00FC  342E               	retlw	46
   207  00FD  342E               	retlw	46
   208  00FE  3423               	retlw	35
   209                           
   210                           ;initializer for _pod
   211  00FF  3441               	retlw	65
   212                           
   213                           ;initializer for _slanje
   214  0100  3401               	retlw	1
   215  0015                     _TMR0	set	21
   216  005F                     _GIE	set	95
   217  0072                     _RC2	set	114
   218  005D                     _TMR0IE	set	93
   219  005A                     _TMR0IF	set	90
   220  008E                     _TRISCbits	set	142
   221  04A8                     _PS0	set	1192
   222  04A9                     _PS1	set	1193
   223  04AA                     _PS2	set	1194
   224  04AB                     _PSA	set	1195
   225  04AD                     _T0CS	set	1197
   226  04AC                     _T0SE	set	1196
   227                           
   228                           ; #config settings
   229  0000                     
   230                           	psect	cinit
   231  001B                     start_initialization:	
   232  001B                     __initialization:	
   233                           
   234                           ; Clear objects allocated to COMMON
   235  001B  01FD               	clrf	__pbssCOMMON& (0+127)
   236                           
   237                           ; Clear objects allocated to BANK0
   238  001C  01AC               	clrf	__pbssBANK0& (0+127)
   239                           
   240                           ; Initialize objects allocated to BANK0
   241  001D  30F5               	movlw	low __pidataBANK0
   242  001E  0084               	movwf	4
   243  001F  3080               	movlw	(high __pidataBANK0)| (0+128)
   244  0020  0085               	movwf	5
   245  0021  3020               	movlw	low __pdataBANK0
   246  0022  0086               	movwf	6
   247  0023  3000               	movlw	high __pdataBANK0
   248  0024  0087               	movwf	7
   249  0025  300C               	movlw	12
   250  0026  3181  2112         	fcall	init_ram
   251  0028                     end_of_initialization:	
   252                           ;End of C runtime variable initialization code
   253                           
   254  0028                     __end_of__initialization:	
   255  0028  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   256  0029  0020               	movlb	0
   257  002A  3181  2918         	ljmp	_main	;jump to C main() function
   258                           
   259                           	psect	bssCOMMON
   260  007D                     __pbssCOMMON:	
   261  007D                     _t:	
   262  007D                     	ds	1
   263                           
   264                           	psect	bssBANK0
   265  002C                     __pbssBANK0:	
   266  002C                     _i:	
   267  002C                     	ds	1
   268                           
   269                           	psect	dataBANK0
   270  0020                     __pdataBANK0:	
   271  0020                     _pageri:	
   272  0020                     	ds	10
   273  002A                     _pod:	
   274  002A                     	ds	1
   275  002B                     _slanje:	
   276  002B                     	ds	1
   277                           
   278                           	psect	inittext
   279  0112                     init_ram:	
   280  0112  00FE               	movwf	126
   281  0113                     initloop:	
   282  0113  0012               	moviw fsr0++
   283  0114  001E               	movwi fsr1++
   284  0115  0BFE               	decfsz	126,f
   285  0116  2913               	goto	initloop
   286  0117  3400               	retlw	0
   287                           
   288                           	psect	cstackCOMMON
   289  0070                     __pcstackCOMMON:	
   290  0070                     ?_init:	
   291  0070                     ?_rf_send:	
   292                           ; 0 bytes @ 0x0
   293                           
   294  0070                     ?_init_interrupts:	
   295                           ; 0 bytes @ 0x0
   296                           
   297  0070                     ?_main:	
   298                           ; 0 bytes @ 0x0
   299                           
   300  0070                     ?_prekidna_rutina:	
   301                           ; 0 bytes @ 0x0
   302                           
   303  0070                     ?___awdiv:	
   304                           ; 0 bytes @ 0x0
   305                           
   306  0070                     ___awdiv@divisor:	
   307                           ; 2 bytes @ 0x0
   308                           
   309                           
   310                           ; 2 bytes @ 0x0
   311  0070                     	ds	2
   312  0072                     ___awdiv@dividend:	
   313                           
   314                           ; 2 bytes @ 0x2
   315  0072                     	ds	2
   316  0074                     ??___awdiv:	
   317                           
   318                           ; 0 bytes @ 0x4
   319  0074                     	ds	1
   320  0075                     ___awdiv@counter:	
   321                           
   322                           ; 1 bytes @ 0x5
   323  0075                     	ds	1
   324  0076                     ___awdiv@sign:	
   325                           
   326                           ; 1 bytes @ 0x6
   327  0076                     	ds	1
   328  0077                     ___awdiv@quotient:	
   329                           
   330                           ; 2 bytes @ 0x7
   331  0077                     	ds	2
   332  0079                     ??_rf_send:	
   333                           
   334                           ; 0 bytes @ 0x9
   335  0079                     	ds	3
   336  007C                     ??_prekidna_rutina:	
   337                           
   338                           ; 0 bytes @ 0xC
   339  007C                     	ds	1
   340                           
   341                           	psect	cstackBANK0
   342  0000                     __pcstackBANK0:	
   343  0000                     ??_init:	
   344  0000                     ??_init_interrupts:	
   345                           ; 0 bytes @ 0x0
   346                           
   347  0000                     ??_main:	
   348                           ; 0 bytes @ 0x0
   349                           
   350                           
   351                           	psect	maintext
   352  0118                     __pmaintext:	
   353                           ; 0 bytes @ 0x0
   354 ;;
   355 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   356 ;;
   357 ;; *************** function _main *****************
   358 ;; Defined at:
   359 ;;		line 72 in file "main.c"
   360 ;; Parameters:    Size  Location     Type
   361 ;;		None
   362 ;; Auto vars:     Size  Location     Type
   363 ;;		None
   364 ;; Return value:  Size  Location     Type
   365 ;;		None               void
   366 ;; Registers used:
   367 ;;		status,2, status,0, pclath, cstack
   368 ;; Tracked objects:
   369 ;;		On entry : B1F/0
   370 ;;		On exit  : 0/0
   371 ;;		Unchanged: 0/0
   372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   374 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   376 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   377 ;;Total ram usage:        0 bytes
   378 ;; Hardware stack levels required when called:    5
   379 ;; This function calls:
   380 ;;		_init
   381 ;; This function is called by:
   382 ;;		Startup code after reset
   383 ;; This function uses a non-reentrant model
   384 ;;
   385                           
   386                           
   387                           ;psect for function _main
   388  0118                     _main:	
   389                           
   390                           ;main.c: 73: init();
   391                           
   392                           ;incstack = 0
   393                           ; Regs used in _main: [status,2+status,0+pclath+cstack]
   394  0118  3181  210B  3181   	fcall	_init
   395  011B                     l45:	
   396                           ;main.c: 74: while(1)
   397                           
   398                           
   399                           ;main.c: 75: {
   400  011B  291B               	goto	l45
   401  011C                     __end_of_main:	
   402                           ;main.c: 78: }
   403                           ;main.c: 79: return;
   404                           
   405                           
   406                           	psect	text1
   407  010B                     __ptext1:	
   408 ;; *************** function _init *****************
   409 ;; Defined at:
   410 ;;		line 137 in file "main.c"
   411 ;; Parameters:    Size  Location     Type
   412 ;;		None
   413 ;; Auto vars:     Size  Location     Type
   414 ;;		None
   415 ;; Return value:  Size  Location     Type
   416 ;;		None               void
   417 ;; Registers used:
   418 ;;		status,2, status,0, pclath, cstack
   419 ;; Tracked objects:
   420 ;;		On entry : 0/0
   421 ;;		On exit  : 0/0
   422 ;;		Unchanged: 0/0
   423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   424 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   425 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   427 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   428 ;;Total ram usage:        0 bytes
   429 ;; Hardware stack levels used:    1
   430 ;; Hardware stack levels required when called:    4
   431 ;; This function calls:
   432 ;;		_init_interrupts
   433 ;; This function is called by:
   434 ;;		_main
   435 ;; This function uses a non-reentrant model
   436 ;;
   437                           
   438                           
   439                           ;psect for function _init
   440  010B                     _init:	
   441                           
   442                           ;main.c: 139: TRISCbits.TRISC2 = 0;
   443                           
   444                           ;incstack = 0
   445                           ; Regs used in _init: [status,2+status,0+pclath+cstack]
   446  010B  0021               	movlb	1	; select bank1
   447  010C  110E               	bcf	14,2	;volatile
   448                           
   449                           ;main.c: 140: RC2 = 1;
   450  010D  0020               	movlb	0	; select bank0
   451  010E  150E               	bsf	14,2	;volatile
   452                           
   453                           ;main.c: 142: init_interrupts();
   454  010F  3181  2101         	fcall	_init_interrupts
   455  0111  0008               	return
   456  0112                     __end_of_init:	
   457                           
   458                           	psect	text2
   459  0101                     __ptext2:	
   460 ;; *************** function _init_interrupts *****************
   461 ;; Defined at:
   462 ;;		line 145 in file "main.c"
   463 ;; Parameters:    Size  Location     Type
   464 ;;		None
   465 ;; Auto vars:     Size  Location     Type
   466 ;;		None
   467 ;; Return value:  Size  Location     Type
   468 ;;		None               void
   469 ;; Registers used:
   470 ;;		None
   471 ;; Tracked objects:
   472 ;;		On entry : 0/0
   473 ;;		On exit  : 0/0
   474 ;;		Unchanged: 0/0
   475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   476 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   477 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   478 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   479 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   480 ;;Total ram usage:        0 bytes
   481 ;; Hardware stack levels used:    1
   482 ;; Hardware stack levels required when called:    3
   483 ;; This function calls:
   484 ;;		Nothing
   485 ;; This function is called by:
   486 ;;		_init
   487 ;; This function uses a non-reentrant model
   488 ;;
   489                           
   490                           
   491                           ;psect for function _init_interrupts
   492  0101                     _init_interrupts:	
   493                           
   494                           ;main.c: 147: GIE = 1;
   495                           
   496                           ;incstack = 0
   497                           ; Regs used in _init_interrupts: []
   498  0101  178B               	bsf	11,7	;volatile
   499                           
   500                           ;main.c: 150: T0CS = 0;
   501  0102  0021               	movlb	1	; select bank1
   502  0103  1295               	bcf	21,5	;volatile
   503                           
   504                           ;main.c: 151: T0SE = 1;
   505  0104  1615               	bsf	21,4	;volatile
   506                           
   507                           ;main.c: 152: PSA = 0;
   508  0105  1195               	bcf	21,3	;volatile
   509                           
   510                           ;main.c: 153: PS2 = 0;
   511  0106  1115               	bcf	21,2	;volatile
   512                           
   513                           ;main.c: 154: PS1 = 0;
   514  0107  1095               	bcf	21,1	;volatile
   515                           
   516                           ;main.c: 155: PS0 = 1;
   517  0108  1415               	bsf	21,0	;volatile
   518                           
   519                           ;main.c: 156: TMR0IE = 1;
   520  0109  168B               	bsf	11,5	;volatile
   521  010A  0008               	return
   522  010B                     __end_of_init_interrupts:	
   523                           
   524                           	psect	intentry
   525  0004                     __pintentry:	
   526 ;; *************** function _prekidna_rutina *****************
   527 ;; Defined at:
   528 ;;		line 82 in file "main.c"
   529 ;; Parameters:    Size  Location     Type
   530 ;;		None
   531 ;; Auto vars:     Size  Location     Type
   532 ;;		None
   533 ;; Return value:  Size  Location     Type
   534 ;;		None               void
   535 ;; Registers used:
   536 ;;		wreg, status,2, status,0, pclath, cstack
   537 ;; Tracked objects:
   538 ;;		On entry : 0/0
   539 ;;		On exit  : 0/0
   540 ;;		Unchanged: 0/0
   541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   542 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   543 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   544 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   545 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   546 ;;Total ram usage:        1 bytes
   547 ;; Hardware stack levels used:    1
   548 ;; Hardware stack levels required when called:    2
   549 ;; This function calls:
   550 ;;		_rf_send
   551 ;; This function is called by:
   552 ;;		Interrupt level 1
   553 ;; This function uses a non-reentrant model
   554 ;;
   555                           
   556  0004                     _prekidna_rutina:	
   557                           
   558                           ;incstack = 0
   559                           ; Regs used in _prekidna_rutina: [wreg+status,2+status,0+pclath+cstack]
   560  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
   561  0005  3180               	pagesel	$
   562  0006  0020               	movlb	0	; select bank0
   563  0007  087F               	movf	127,w
   564  0008  00FC               	movwf	??_prekidna_rutina
   565                           
   566                           ;main.c: 84: if (TMR0IE && TMR0IF)
   567  0009  1A8B               	btfsc	11,5	;volatile
   568  000A  1D0B               	btfss	11,2	;volatile
   569  000B  2814               	goto	i1l53
   570                           
   571                           ;main.c: 85: {
   572                           ;main.c: 86: TMR0IF = 0;
   573  000C  110B               	bcf	11,2	;volatile
   574                           
   575                           ;main.c: 87: TMR0 = 6;
   576  000D  3006               	movlw	6
   577  000E  0095               	movwf	21	;volatile
   578                           
   579                           ;main.c: 89: if (slanje == 1) rf_send();
   580  000F  032B               	decf	_slanje,w
   581  0010  1D03               	btfss	3,2
   582  0011  2814               	goto	i1l53
   583  0012  3180  202C         	fcall	_rf_send
   584  0014                     i1l53:	
   585  0014  087C               	movf	??_prekidna_rutina,w
   586  0015  0020               	movlb	0	; select bank0
   587  0016  00FF               	movwf	127
   588  0017  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
   589  0018  0009               	retfie
   590  0019                     __end_of_prekidna_rutina:	
   591                           
   592                           	psect	text4
   593  002C                     __ptext4:	
   594 ;; *************** function _rf_send *****************
   595 ;; Defined at:
   596 ;;		line 97 in file "main.c"
   597 ;; Parameters:    Size  Location     Type
   598 ;;		None
   599 ;; Auto vars:     Size  Location     Type
   600 ;;		None
   601 ;; Return value:  Size  Location     Type
   602 ;;		None               void
   603 ;; Registers used:
   604 ;;		wreg, status,2, status,0, pclath, cstack
   605 ;; Tracked objects:
   606 ;;		On entry : 0/0
   607 ;;		On exit  : 0/0
   608 ;;		Unchanged: 0/0
   609 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   610 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   611 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   612 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   613 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   614 ;;Total ram usage:        3 bytes
   615 ;; Hardware stack levels used:    1
   616 ;; Hardware stack levels required when called:    1
   617 ;; This function calls:
   618 ;;		___awdiv
   619 ;; This function is called by:
   620 ;;		_prekidna_rutina
   621 ;; This function uses a non-reentrant model
   622 ;;
   623                           
   624                           
   625                           ;psect for function _rf_send
   626  002C                     _rf_send:	
   627                           
   628                           ;main.c: 99: if (t == 0) RC2 = 1;
   629                           
   630                           ;incstack = 0
   631                           ; Regs used in _rf_send: [wreg+status,2+status,0+pclath+cstack]
   632  002C  087D               	movf	_t,w
   633  002D  1903               	btfsc	3,2
   634  002E  283B               	goto	i1l700
   635                           
   636                           ;main.c: 100: else if (t < 10) RC2 = !RC2;
   637  002F  300A               	movlw	10
   638  0030  027D               	subwf	_t,w
   639  0031  1803               	skipnc
   640  0032  2837               	goto	i1l698
   641  0033  3004               	movlw	4
   642  0034  0020               	movlb	0	; select bank0
   643  0035  068E               	xorwf	14,f
   644  0036  287F               	goto	i1l714
   645  0037                     i1l698:	
   646                           
   647                           ;main.c: 101: else if (t < 16) RC2 = 1;
   648  0037  3010               	movlw	16
   649  0038  027D               	subwf	_t,w
   650  0039  1803               	skipnc
   651  003A  283D               	goto	i1l702
   652  003B                     i1l700:	
   653  003B  0020               	movlb	0	; select bank0
   654  003C  287E               	goto	i1l68
   655  003D                     i1l702:	
   656                           
   657                           ;main.c: 102: else if (t < 17) RC2 = 0;
   658  003D  3011               	movlw	17
   659  003E  027D               	subwf	_t,w
   660  003F  1803               	skipnc
   661  0040  2843               	goto	i1l62
   662  0041  0020               	movlb	0	; select bank0
   663  0042  287C               	goto	i1l712
   664  0043                     i1l62:	
   665                           
   666                           ;main.c: 103: else
   667                           ;main.c: 104: {
   668                           ;main.c: 105: if (t%2 == 1)
   669  0043  1C7D               	btfss	_t,0
   670  0044  2861               	goto	i1l710
   671                           
   672                           ;main.c: 106: {
   673                           ;main.c: 107: if (((pod) & (1 << ((t - 17)/2)))) RC2 = 1;
   674  0045  3001               	movlw	1
   675  0046  00F9               	movwf	??_rf_send
   676  0047  3002               	movlw	2
   677  0048  00F0               	movwf	___awdiv@divisor
   678  0049  3000               	movlw	0
   679  004A  00F1               	movwf	___awdiv@divisor+1
   680  004B  087D               	movf	_t,w
   681  004C  3EEF               	addlw	239
   682  004D  00F2               	movwf	___awdiv@dividend
   683  004E  30FF               	movlw	255
   684  004F  1803               	skipnc
   685  0050  3000               	movlw	0
   686  0051  00F3               	movwf	___awdiv@dividend+1
   687  0052  3180  20A4  3180   	fcall	___awdiv
   688  0055  0870               	movf	?___awdiv,w
   689  0056  0A89               	incf	9,f
   690  0057  2859               	goto	u40_24
   691  0058                     u40_25:	
   692  0058  35F9               	lslf	??_rf_send,f
   693  0059                     u40_24:	
   694  0059  0B89               	decfsz	9,f
   695  005A  2858               	goto	u40_25
   696  005B  0879               	movf	??_rf_send,w
   697  005C  0020               	movlb	0	; select bank0
   698  005D  052A               	andwf	_pod,w
   699  005E  1903               	btfsc	3,2
   700  005F  287C               	goto	i1l712
   701  0060  287E               	goto	i1l68
   702  0061                     i1l710:	
   703                           ;main.c: 109: }
   704                           
   705                           ;main.c: 108: else RC2 = 0;
   706                           
   707                           
   708                           ;main.c: 110: else
   709                           ;main.c: 111: {
   710                           ;main.c: 112: if (((pod) & (1 << ((t - 17)/2)))) RC2 = 0;
   711  0061  3001               	movlw	1
   712  0062  00F9               	movwf	??_rf_send
   713  0063  3002               	movlw	2
   714  0064  00F0               	movwf	___awdiv@divisor
   715  0065  3000               	movlw	0
   716  0066  00F1               	movwf	___awdiv@divisor+1
   717  0067  087D               	movf	_t,w
   718  0068  3EEF               	addlw	239
   719  0069  00F2               	movwf	___awdiv@dividend
   720  006A  30FF               	movlw	255
   721  006B  1803               	skipnc
   722  006C  3000               	movlw	0
   723  006D  00F3               	movwf	___awdiv@dividend+1
   724  006E  3180  20A4  3180   	fcall	___awdiv
   725  0071  0870               	movf	?___awdiv,w
   726  0072  0A89               	incf	9,f
   727  0073  2875               	goto	u42_24
   728  0074                     u42_25:	
   729  0074  35F9               	lslf	??_rf_send,f
   730  0075                     u42_24:	
   731  0075  0B89               	decfsz	9,f
   732  0076  2874               	goto	u42_25
   733  0077  0879               	movf	??_rf_send,w
   734  0078  0020               	movlb	0	; select bank0
   735  0079  052A               	andwf	_pod,w
   736  007A  1903               	btfsc	3,2
   737  007B  287E               	goto	i1l68
   738  007C                     i1l712:	
   739  007C  110E               	bcf	14,2	;volatile
   740  007D  287F               	goto	i1l714
   741  007E                     i1l68:	
   742                           
   743                           ;main.c: 113: else RC2 = 1;
   744  007E  150E               	bsf	14,2	;volatile
   745  007F                     i1l714:	
   746                           
   747                           ;main.c: 114: }
   748                           ;main.c: 115: }
   749                           ;main.c: 116: t++;
   750  007F  3001               	movlw	1
   751  0080  00F9               	movwf	??_rf_send
   752  0081  0879               	movf	??_rf_send,w
   753  0082  07FD               	addwf	_t,f
   754                           
   755                           ;main.c: 117: if (t == 34)
   756  0083  3022               	movlw	34
   757  0084  067D               	xorwf	_t,w
   758  0085  1D03               	btfss	3,2
   759  0086  0008               	return
   760                           
   761                           ;main.c: 118: {
   762                           ;main.c: 119: RC2 = 0;
   763  0087  110E               	bcf	14,2	;volatile
   764                           
   765                           ;main.c: 120: t = 0;
   766  0088  01FD               	clrf	_t
   767                           
   768                           ;main.c: 121: _delay((unsigned long)((1000)*(8000000/4000.0)));
   769  0089  300B               	movlw	11
   770  008A  00FB               	movwf	??_rf_send+2
   771  008B  3026               	movlw	38
   772  008C  00FA               	movwf	??_rf_send+1
   773  008D  3066               	movlw	102
   774  008E  00F9               	movwf	??_rf_send
   775  008F                     u49_27:	
   776  008F  0BF9               	decfsz	??_rf_send,f
   777  0090  288F               	goto	u49_27
   778  0091  0BFA               	decfsz	??_rf_send+1,f
   779  0092  288F               	goto	u49_27
   780  0093  0BFB               	decfsz	??_rf_send+2,f
   781  0094  288F               	goto	u49_27
   782  0095  3200               	nop2
   783                           
   784                           ;main.c: 122: pod++;
   785  0096  3001               	movlw	1
   786  0097  00F9               	movwf	??_rf_send
   787  0098  0879               	movf	??_rf_send,w
   788  0099  0020               	movlb	0	; select bank0
   789  009A  07AA               	addwf	_pod,f
   790                           
   791                           ;main.c: 123: if (pod > 'z') pod = 'A';
   792  009B  307B               	movlw	123
   793  009C  022A               	subwf	_pod,w
   794  009D  1C03               	skipc
   795  009E  0008               	return
   796  009F  3041               	movlw	65
   797  00A0  00F9               	movwf	??_rf_send
   798  00A1  0879               	movf	??_rf_send,w
   799  00A2  00AA               	movwf	_pod
   800  00A3  0008               	return
   801  00A4                     __end_of_rf_send:	
   802                           
   803                           	psect	text5
   804  00A4                     __ptext5:	
   805 ;; *************** function ___awdiv *****************
   806 ;; Defined at:
   807 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
   808 ;; Parameters:    Size  Location     Type
   809 ;;  divisor         2    0[COMMON] int 
   810 ;;  dividend        2    2[COMMON] int 
   811 ;; Auto vars:     Size  Location     Type
   812 ;;  quotient        2    7[COMMON] int 
   813 ;;  sign            1    6[COMMON] unsigned char 
   814 ;;  counter         1    5[COMMON] unsigned char 
   815 ;; Return value:  Size  Location     Type
   816 ;;                  2    0[COMMON] int 
   817 ;; Registers used:
   818 ;;		wreg, status,2, status,0
   819 ;; Tracked objects:
   820 ;;		On entry : 0/0
   821 ;;		On exit  : 0/0
   822 ;;		Unchanged: 0/0
   823 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   824 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   825 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   826 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   827 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   828 ;;Total ram usage:        9 bytes
   829 ;; Hardware stack levels used:    1
   830 ;; This function calls:
   831 ;;		Nothing
   832 ;; This function is called by:
   833 ;;		_rf_send
   834 ;; This function uses a non-reentrant model
   835 ;;
   836                           
   837                           
   838                           ;psect for function ___awdiv
   839  00A4                     ___awdiv:	
   840                           
   841                           ;incstack = 0
   842                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
   843  00A4  01F6               	clrf	___awdiv@sign
   844  00A5  1FF1               	btfss	___awdiv@divisor+1,7
   845  00A6  28AE               	goto	i1l650
   846  00A7  09F0               	comf	___awdiv@divisor,f
   847  00A8  09F1               	comf	___awdiv@divisor+1,f
   848  00A9  0AF0               	incf	___awdiv@divisor,f
   849  00AA  1903               	skipnz
   850  00AB  0AF1               	incf	___awdiv@divisor+1,f
   851  00AC  01F6               	clrf	___awdiv@sign
   852  00AD  0AF6               	incf	___awdiv@sign,f
   853  00AE                     i1l650:	
   854  00AE  1FF3               	btfss	___awdiv@dividend+1,7
   855  00AF  28B9               	goto	i1l656
   856  00B0  09F2               	comf	___awdiv@dividend,f
   857  00B1  09F3               	comf	___awdiv@dividend+1,f
   858  00B2  0AF2               	incf	___awdiv@dividend,f
   859  00B3  1903               	skipnz
   860  00B4  0AF3               	incf	___awdiv@dividend+1,f
   861  00B5  3001               	movlw	1
   862  00B6  00F4               	movwf	??___awdiv
   863  00B7  0874               	movf	??___awdiv,w
   864  00B8  06F6               	xorwf	___awdiv@sign,f
   865  00B9                     i1l656:	
   866  00B9  01F7               	clrf	___awdiv@quotient
   867  00BA  01F8               	clrf	___awdiv@quotient+1
   868  00BB  0870               	movf	___awdiv@divisor,w
   869  00BC  0471               	iorwf	___awdiv@divisor+1,w
   870  00BD  1903               	btfsc	3,2
   871  00BE  28E8               	goto	i1l678
   872  00BF  01F5               	clrf	___awdiv@counter
   873  00C0  0AF5               	incf	___awdiv@counter,f
   874  00C1                     i1l666:	
   875  00C1  1BF1               	btfsc	___awdiv@divisor+1,7
   876  00C2  28CD               	goto	i1l668
   877  00C3  3001               	movlw	1
   878  00C4                     u28_25:	
   879  00C4  35F0               	lslf	___awdiv@divisor,f
   880  00C5  0DF1               	rlf	___awdiv@divisor+1,f
   881  00C6  0B89               	decfsz	9,f
   882  00C7  28C4               	goto	u28_25
   883  00C8  3001               	movlw	1
   884  00C9  00F4               	movwf	??___awdiv
   885  00CA  0874               	movf	??___awdiv,w
   886  00CB  07F5               	addwf	___awdiv@counter,f
   887  00CC  28C1               	goto	i1l666
   888  00CD                     i1l668:	
   889  00CD  3001               	movlw	1
   890  00CE                     u30_25:	
   891  00CE  35F7               	lslf	___awdiv@quotient,f
   892  00CF  0DF8               	rlf	___awdiv@quotient+1,f
   893  00D0  0B89               	decfsz	9,f
   894  00D1  28CE               	goto	u30_25
   895  00D2  0871               	movf	___awdiv@divisor+1,w
   896  00D3  0273               	subwf	___awdiv@dividend+1,w
   897  00D4  1D03               	skipz
   898  00D5  28D8               	goto	u31_25
   899  00D6  0870               	movf	___awdiv@divisor,w
   900  00D7  0272               	subwf	___awdiv@dividend,w
   901  00D8                     u31_25:	
   902  00D8  1C03               	skipc
   903  00D9  28DF               	goto	i1l674
   904  00DA  0870               	movf	___awdiv@divisor,w
   905  00DB  02F2               	subwf	___awdiv@dividend,f
   906  00DC  0871               	movf	___awdiv@divisor+1,w
   907  00DD  3BF3               	subwfb	___awdiv@dividend+1,f
   908  00DE  1477               	bsf	___awdiv@quotient,0
   909  00DF                     i1l674:	
   910  00DF  3001               	movlw	1
   911  00E0                     u32_25:	
   912  00E0  36F1               	lsrf	___awdiv@divisor+1,f
   913  00E1  0CF0               	rrf	___awdiv@divisor,f
   914  00E2  0B89               	decfsz	9,f
   915  00E3  28E0               	goto	u32_25
   916  00E4  3001               	movlw	1
   917  00E5  02F5               	subwf	___awdiv@counter,f
   918  00E6  1D03               	btfss	3,2
   919  00E7  28CD               	goto	i1l668
   920  00E8                     i1l678:	
   921  00E8  0876               	movf	___awdiv@sign,w
   922  00E9  1903               	btfsc	3,2
   923  00EA  28F0               	goto	i1l682
   924  00EB  09F7               	comf	___awdiv@quotient,f
   925  00EC  09F8               	comf	___awdiv@quotient+1,f
   926  00ED  0AF7               	incf	___awdiv@quotient,f
   927  00EE  1903               	skipnz
   928  00EF  0AF8               	incf	___awdiv@quotient+1,f
   929  00F0                     i1l682:	
   930  00F0  0878               	movf	___awdiv@quotient+1,w
   931  00F1  00F1               	movwf	?___awdiv+1
   932  00F2  0877               	movf	___awdiv@quotient,w
   933  00F3  00F0               	movwf	?___awdiv
   934  00F4  0008               	return
   935  00F5                     __end_of___awdiv:	
   936  007E                     btemp	set	126	;btemp
   937  007E                     int$flags	set	126
   938  007E                     wtemp	set	126
   939  007E                     wtemp0	set	126
   940  0080                     wtemp1	set	128
   941  0082                     wtemp2	set	130
   942  0084                     wtemp3	set	132
   943  0086                     wtemp4	set	134
   944  0088                     wtemp5	set	136
   945  007F                     wtemp6	set	127
   946  007E                     ttemp	set	126
   947  007E                     ttemp0	set	126
   948  0081                     ttemp1	set	129
   949  0084                     ttemp2	set	132
   950  0087                     ttemp3	set	135
   951  007F                     ttemp4	set	127
   952  007E                     ltemp	set	126
   953  007E                     ltemp0	set	126
   954  0082                     ltemp1	set	130
   955  0086                     ltemp2	set	134
   956  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        12
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80      0      13
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _prekidna_rutina in COMMON

    _prekidna_rutina->_rf_send
    _rf_send->___awdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _prekidna_rutina in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _prekidna_rutina in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _prekidna_rutina in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _prekidna_rutina in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _prekidna_rutina in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _prekidna_rutina in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _prekidna_rutina in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _prekidna_rutina in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _prekidna_rutina in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _prekidna_rutina in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _prekidna_rutina in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _prekidna_rutina in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _prekidna_rutina in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                               _init
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
                    _init_interrupts
 ---------------------------------------------------------------------------------
 (2) _init_interrupts                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _prekidna_rutina                                      1     1      0     512
                                             12 COMMON     1     1      0
                            _rf_send
 ---------------------------------------------------------------------------------
 (4) _rf_send                                              3     3      0     512
                                              9 COMMON     3     3      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              9     5      4     512
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init
     _init_interrupts

 _prekidna_rutina (ROOT)
   _rf_send
     ___awdiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      D       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       D       5       16.3%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      1B      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      1B      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Fri Feb 26 10:56:13 2016

                       _i 002C                         _t 007D               __CFG_CP$OFF 0000  
                      l45 011B              ___awdiv@sign 0076                       _GIE 005F  
       ??_init_interrupts 0000                       _RC2 0072                       _PS0 04A8  
                     _PS1 04A9                       _PS2 04AA              __CFG_CPD$OFF 0000  
                     _PSA 04AB                       _pod 002A              __CFG_BORV$LO 0000  
                     wreg 0009              __CFG_FOSC$HS 0000              __CFG_LVP$OFF 0000  
                    _T0CS 04AD                      _T0SE 04AC                      i1l53 0014  
                    i1l62 0043                      i1l68 007E                      _TMR0 0015  
            __CFG_WRT$OFF 0000                      _main 0118                      _init 010B  
                    fsr0h 0005                      fsr1h 0007                      fsr0l 0004  
                    fsr1l 0006                      btemp 007E                      ltemp 007E  
                    start 0019                      ttemp 007E                      wtemp 007E  
           __CFG_IESO$OFF 0000             __CFG_MCLRE$ON 0000                     ?_main 0070  
                   ?_init 0070           __end_of___awdiv 00F5             __CFG_WDTE$OFF 0000  
         ___awdiv@divisor 0070                     i1l700 003B                     i1l710 0061  
                   i1l702 003D                     i1l712 007C                     i1l650 00AE  
                   i1l714 007F                     i1l656 00B9                     i1l682 00F0  
                   i1l674 00DF                     i1l666 00C1                     i1l668 00CD  
                   i1l678 00E8                     i1l698 0037           ___awdiv@counter 0075  
                   u30_25 00CE                     u31_25 00D8                     u40_24 0059  
                   u32_25 00E0                     u40_25 0058                     u42_24 0075  
                   u42_25 0074                     u28_25 00C4                     u49_27 008F  
          __CFG_FCMEN$OFF 0000           __end_of_rf_send 00A4            __CFG_BOREN$OFF 0000  
                   ltemp0 007E                     ltemp1 0082                     ltemp2 0086  
                   ltemp3 0080                     ttemp0 007E                     ttemp1 0081  
                   ttemp2 0084                     ttemp3 0087                     ttemp4 007F  
                   status 0003                     wtemp0 007E                     wtemp1 0080  
                   wtemp2 0082                     wtemp3 0084                     wtemp4 0086  
                   wtemp5 0088                     wtemp6 007F           __initialization 001B  
            __end_of_main 011C              __end_of_init 0112                    ??_main 0000  
                  ??_init 0000            __CFG_PLLEN$OFF 0000          ___awdiv@dividend 0072  
                  _TMR0IE 005D                    _TMR0IF 005A            __CFG_PWRTE$OFF 0000  
               ??___awdiv 0074           _prekidna_rutina 0004                    _pageri 0020  
        ___awdiv@quotient 0077                    _slanje 002B                 ??_rf_send 0079  
 __end_of__initialization 0028           _init_interrupts 0101            __pcstackCOMMON 0070  
            __pidataBANK0 00F5                __pbssBANK0 002C           __CFG_VCAPEN$OFF 0000  
 __end_of_prekidna_rutina 0019                __pmaintext 0118                __pintentry 0004  
 __end_of_init_interrupts 010B                   ___awdiv 00A4           __CFG_STVREN$OFF 0000  
                 __ptext1 010B                   __ptext2 0101                   __ptext4 002C  
                 __ptext5 00A4                   _rf_send 002C      end_of_initialization 0028  
                 init_ram 0112                   initloop 0113          ?_prekidna_rutina 0070  
               _TRISCbits 008E          ?_init_interrupts 0070       start_initialization 001B  
             __pdataBANK0 0020               __pbssCOMMON 007D                 ___latbits 0003  
           __pcstackBANK0 0000                  ?___awdiv 0070                  ?_rf_send 0070  
        __size_of___awdiv 0051  __size_of_prekidna_rutina 0015          __size_of_rf_send 0078  
           __size_of_main 0004             __size_of_init 0007  __size_of_init_interrupts 000A  
                int$flags 007E                  intlevel1 0000         __CFG_CLKOUTEN$OFF 0000  
       ??_prekidna_rutina 007C  
