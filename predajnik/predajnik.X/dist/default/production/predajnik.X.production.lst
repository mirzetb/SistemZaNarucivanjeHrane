

Microchip Technology PIC LITE Macro Assembler V1.35 build -356382666 
                                                                                               Sat Apr 09 14:33:45 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	16F1939
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	dabs	1,0x7E,2
    17  0000                     	;# 
    18  0001                     	;# 
    19  0002                     	;# 
    20  0003                     	;# 
    21  0004                     	;# 
    22  0005                     	;# 
    23  0006                     	;# 
    24  0007                     	;# 
    25  0008                     	;# 
    26  0009                     	;# 
    27  000A                     	;# 
    28  000B                     	;# 
    29  000C                     	;# 
    30  000D                     	;# 
    31  000E                     	;# 
    32  000F                     	;# 
    33  0010                     	;# 
    34  0011                     	;# 
    35  0012                     	;# 
    36  0013                     	;# 
    37  0015                     	;# 
    38  0016                     	;# 
    39  0016                     	;# 
    40  0017                     	;# 
    41  0018                     	;# 
    42  0019                     	;# 
    43  001A                     	;# 
    44  001B                     	;# 
    45  001C                     	;# 
    46  001E                     	;# 
    47  001F                     	;# 
    48  008C                     	;# 
    49  008D                     	;# 
    50  008E                     	;# 
    51  008F                     	;# 
    52  0090                     	;# 
    53  0091                     	;# 
    54  0092                     	;# 
    55  0093                     	;# 
    56  0095                     	;# 
    57  0096                     	;# 
    58  0097                     	;# 
    59  0098                     	;# 
    60  0099                     	;# 
    61  009A                     	;# 
    62  009B                     	;# 
    63  009B                     	;# 
    64  009C                     	;# 
    65  009D                     	;# 
    66  009E                     	;# 
    67  010C                     	;# 
    68  010D                     	;# 
    69  010E                     	;# 
    70  010F                     	;# 
    71  0110                     	;# 
    72  0111                     	;# 
    73  0112                     	;# 
    74  0113                     	;# 
    75  0114                     	;# 
    76  0115                     	;# 
    77  0116                     	;# 
    78  0117                     	;# 
    79  0118                     	;# 
    80  0119                     	;# 
    81  011A                     	;# 
    82  011B                     	;# 
    83  011D                     	;# 
    84  018C                     	;# 
    85  018D                     	;# 
    86  018F                     	;# 
    87  0190                     	;# 
    88  0191                     	;# 
    89  0191                     	;# 
    90  0192                     	;# 
    91  0193                     	;# 
    92  0193                     	;# 
    93  0193                     	;# 
    94  0194                     	;# 
    95  0195                     	;# 
    96  0196                     	;# 
    97  0199                     	;# 
    98  019A                     	;# 
    99  019B                     	;# 
   100  019B                     	;# 
   101  019B                     	;# 
   102  019B                     	;# 
   103  019C                     	;# 
   104  019C                     	;# 
   105  019D                     	;# 
   106  019E                     	;# 
   107  019F                     	;# 
   108  020D                     	;# 
   109  0210                     	;# 
   110  0211                     	;# 
   111  0212                     	;# 
   112  0213                     	;# 
   113  0214                     	;# 
   114  0215                     	;# 
   115  0215                     	;# 
   116  0216                     	;# 
   117  0217                     	;# 
   118  0291                     	;# 
   119  0291                     	;# 
   120  0292                     	;# 
   121  0293                     	;# 
   122  0294                     	;# 
   123  0295                     	;# 
   124  0295                     	;# 
   125  0296                     	;# 
   126  0298                     	;# 
   127  0298                     	;# 
   128  0299                     	;# 
   129  029A                     	;# 
   130  029B                     	;# 
   131  029C                     	;# 
   132  029C                     	;# 
   133  029D                     	;# 
   134  029E                     	;# 
   135  029F                     	;# 
   136  0311                     	;# 
   137  0311                     	;# 
   138  0312                     	;# 
   139  0313                     	;# 
   140  0314                     	;# 
   141  0315                     	;# 
   142  0315                     	;# 
   143  0316                     	;# 
   144  0318                     	;# 
   145  0318                     	;# 
   146  0319                     	;# 
   147  031A                     	;# 
   148  031C                     	;# 
   149  031C                     	;# 
   150  031D                     	;# 
   151  031E                     	;# 
   152  0394                     	;# 
   153  0395                     	;# 
   154  0396                     	;# 
   155  0415                     	;# 
   156  0416                     	;# 
   157  0417                     	;# 
   158  041C                     	;# 
   159  041D                     	;# 
   160  041E                     	;# 
   161  0791                     	;# 
   162  0792                     	;# 
   163  0793                     	;# 
   164  0794                     	;# 
   165  0795                     	;# 
   166  0798                     	;# 
   167  0799                     	;# 
   168  079A                     	;# 
   169  07A0                     	;# 
   170  07A1                     	;# 
   171  07A2                     	;# 
   172  07A3                     	;# 
   173  07A4                     	;# 
   174  07A5                     	;# 
   175  07A6                     	;# 
   176  07A7                     	;# 
   177  07A8                     	;# 
   178  07A9                     	;# 
   179  07AA                     	;# 
   180  07AB                     	;# 
   181  0FE4                     	;# 
   182  0FE5                     	;# 
   183  0FE6                     	;# 
   184  0FE7                     	;# 
   185  0FE8                     	;# 
   186  0FE9                     	;# 
   187  0FEA                     	;# 
   188  0FEB                     	;# 
   189  0FED                     	;# 
   190  0FEE                     	;# 
   191  0FEF                     	;# 
   192                           
   193                           	psect	idataBANK0
   194  0162                     __pidataBANK0:	
   195                           
   196                           ;initializer for _pod
   197  0162  3441               	retlw	65
   198  0015                     _TMR0	set	21
   199  0072                     _RC2	set	114
   200  008D                     _RCIF	set	141
   201  007C                     _RD4	set	124
   202  005D                     _TMR0IE	set	93
   203  005A                     _TMR0IF	set	90
   204  008E                     _TRISCbits	set	142
   205  008F                     _TRISDbits	set	143
   206  04A8                     _PS0	set	1192
   207  04A9                     _PS1	set	1193
   208  04AA                     _PS2	set	1194
   209  04AB                     _PSA	set	1195
   210  04AD                     _T0CS	set	1197
   211  04AC                     _T0SE	set	1196
   212  0199                     _RCREG	set	409
   213  019C                     _SPBRGH	set	412
   214  019B                     _SPBRGL	set	411
   215  019A                     _TXREG	set	410
   216  0CFB                     _BRG16	set	3323
   217  0CF2                     _BRGH	set	3314
   218  0CEC                     _CREN	set	3308
   219  0CEF                     _SPEN	set	3311
   220  0CED                     _SREN	set	3309
   221  0CF4                     _SYNC	set	3316
   222  0CF5                     _TXEN	set	3317
   223  10AD                     _SSPEN	set	4269
   224                           
   225                           ; #config settings
   226  0000                     
   227                           	psect	cinit
   228  0018                     start_initialization:	
   229  0018                     __initialization:	
   230                           
   231                           ; Clear objects allocated to COMMON
   232  0018  01FD               	clrf	__pbssCOMMON& (0+127)
   233                           
   234                           ; Initialize objects allocated to BANK0
   235  0019  3181  2162         	fcall	__pidataBANK0	;fetch initializer
   236  001B  00A5               	movwf	__pdataBANK0& (0+127)
   237  001C                     end_of_initialization:	
   238                           ;End of C runtime variable initialization code
   239                           
   240  001C                     __end_of__initialization:	
   241  001C  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   242  001D  0020               	movlb	0
   243  001E  3180  288B         	ljmp	_main	;jump to C main() function
   244                           
   245                           	psect	bssCOMMON
   246  007D                     __pbssCOMMON:	
   247  007D                     _t:	
   248  007D                     	ds	1
   249                           
   250                           	psect	dataBANK0
   251  0025                     __pdataBANK0:	
   252  0025                     _pod:	
   253  0025                     	ds	1
   254                           
   255                           	psect	cstackCOMMON
   256  0070                     __pcstackCOMMON:	
   257  0070                     ?_init:	
   258  0070                     ?_init_serial:	
   259                           ; 0 bytes @ 0x0
   260                           
   261  0070                     ?_rf_send:	
   262                           ; 0 bytes @ 0x0
   263                           
   264  0070                     ?_main:	
   265                           ; 0 bytes @ 0x0
   266                           
   267  0070                     ?_prekidna_rutina:	
   268                           ; 0 bytes @ 0x0
   269                           
   270  0070                     ?___awdiv:	
   271                           ; 0 bytes @ 0x0
   272                           
   273  0070                     ___awdiv@divisor:	
   274                           ; 2 bytes @ 0x0
   275                           
   276                           
   277                           ; 2 bytes @ 0x0
   278  0070                     	ds	2
   279  0072                     ___awdiv@dividend:	
   280                           
   281                           ; 2 bytes @ 0x2
   282  0072                     	ds	2
   283  0074                     ??___awdiv:	
   284                           
   285                           ; 0 bytes @ 0x4
   286  0074                     	ds	1
   287  0075                     ___awdiv@counter:	
   288                           
   289                           ; 1 bytes @ 0x5
   290  0075                     	ds	1
   291  0076                     ___awdiv@sign:	
   292                           
   293                           ; 1 bytes @ 0x6
   294  0076                     	ds	1
   295  0077                     ___awdiv@quotient:	
   296                           
   297                           ; 2 bytes @ 0x7
   298  0077                     	ds	2
   299  0079                     ??_rf_send:	
   300                           
   301                           ; 0 bytes @ 0x9
   302  0079                     	ds	3
   303  007C                     ??_prekidna_rutina:	
   304                           
   305                           ; 0 bytes @ 0xC
   306  007C                     	ds	1
   307                           
   308                           	psect	cstackBANK0
   309  0020                     __pcstackBANK0:	
   310  0020                     ??_init:	
   311  0020                     ??_init_serial:	
   312                           ; 0 bytes @ 0x0
   313                           
   314  0020                     ??_main:	
   315                           ; 0 bytes @ 0x0
   316                           
   317                           
   318                           ; 0 bytes @ 0x0
   319  0020                     	ds	3
   320  0023                     main@var2:	
   321                           
   322                           ; 1 bytes @ 0x3
   323  0023                     	ds	1
   324  0024                     main@var:	
   325                           
   326                           ; 1 bytes @ 0x4
   327  0024                     	ds	1
   328                           
   329                           	psect	maintext
   330  008B                     __pmaintext:	
   331 ;;
   332 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   333 ;;
   334 ;; *************** function _main *****************
   335 ;; Defined at:
   336 ;;		line 58 in file "main.c"
   337 ;; Parameters:    Size  Location     Type
   338 ;;		None
   339 ;; Auto vars:     Size  Location     Type
   340 ;;  var2            1    3[BANK0 ] unsigned char 
   341 ;;  var             1    4[BANK0 ] unsigned char 
   342 ;; Return value:  Size  Location     Type
   343 ;;		None               void
   344 ;; Registers used:
   345 ;;		wreg, status,2, status,0, pclath, cstack
   346 ;; Tracked objects:
   347 ;;		On entry : B1F/0
   348 ;;		On exit  : 0/0
   349 ;;		Unchanged: 0/0
   350 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   351 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   352 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
   353 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
   354 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
   355 ;;Total ram usage:        5 bytes
   356 ;; Hardware stack levels required when called:    4
   357 ;; This function calls:
   358 ;;		_init
   359 ;;		_init_serial
   360 ;; This function is called by:
   361 ;;		Startup code after reset
   362 ;; This function uses a non-reentrant model
   363 ;;
   364                           
   365                           
   366                           ;psect for function _main
   367  008B                     _main:	
   368                           
   369                           ;main.c: 59: init();
   370                           
   371                           ;incstack = 0
   372                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   373  008B  3181  2145  3180   	fcall	_init
   374                           
   375                           ;main.c: 60: init_serial();
   376  008E  3181  2156  3180   	fcall	_init_serial
   377  0091                     l795:	
   378                           ;main.c: 61: while(1) {
   379                           
   380                           
   381                           ;main.c: 62: if(RCIF) {
   382  0091  0020               	movlb	0	; select bank0
   383  0092  1E91               	btfss	17,5	;volatile
   384  0093  2891               	goto	l795
   385                           
   386                           ;main.c: 63: char var = RCREG;
   387  0094  0023               	movlb	3	; select bank3
   388  0095  0819               	movf	25,w	;volatile
   389  0096  0020               	movlb	0	; select bank0
   390  0097  00A0               	movwf	??_main
   391  0098  0820               	movf	??_main,w
   392  0099  00A4               	movwf	main@var
   393                           
   394                           ;main.c: 64: if(var == '#') {
   395  009A  3023               	movlw	35
   396  009B  0624               	xorwf	main@var,w
   397  009C  1D03               	btfss	3,2
   398  009D  28B9               	goto	l803
   399                           
   400                           ;main.c: 66: TXREG = '*';
   401  009E  302A               	movlw	42
   402  009F  0023               	movlb	3	; select bank3
   403  00A0  009A               	movwf	26	;volatile
   404                           
   405                           ;main.c: 67: _delay((unsigned long)((50)*(8000000/4000.0)));
   406  00A1  3082               	movlw	130
   407  00A2  0020               	movlb	0	; select bank0
   408  00A3  00A1               	movwf	??_main+1
   409  00A4  30DD               	movlw	221
   410  00A5  00A0               	movwf	??_main
   411  00A6                     u557:	
   412  00A6  0BA0               	decfsz	??_main,f
   413  00A7  28A6               	goto	u557
   414  00A8  0BA1               	decfsz	??_main+1,f
   415  00A9  28A6               	goto	u557
   416  00AA  3200               	nop2
   417                           
   418                           ;main.c: 68: TXREG = 'A';
   419  00AB  3041               	movlw	65
   420  00AC  0023               	movlb	3	; select bank3
   421  00AD  009A               	movwf	26	;volatile
   422                           
   423                           ;main.c: 69: _delay((unsigned long)((50)*(8000000/4000.0)));
   424  00AE  3082               	movlw	130
   425  00AF  0020               	movlb	0	; select bank0
   426  00B0  00A1               	movwf	??_main+1
   427  00B1  30DD               	movlw	221
   428  00B2  00A0               	movwf	??_main
   429  00B3                     u567:	
   430  00B3  0BA0               	decfsz	??_main,f
   431  00B4  28B3               	goto	u567
   432  00B5  0BA1               	decfsz	??_main+1,f
   433  00B6  28B3               	goto	u567
   434  00B7  3200               	nop2
   435                           
   436                           ;main.c: 70: } else if(var == '*') {
   437  00B8  2891               	goto	l795
   438  00B9                     l803:	
   439  00B9  302A               	movlw	42
   440  00BA  0020               	movlb	0	; select bank0
   441  00BB  0624               	xorwf	main@var,w
   442  00BC  1D03               	btfss	3,2
   443  00BD  2891               	goto	l795
   444  00BE                     l72:	
   445                           ;main.c: 71: while(!RCIF);
   446                           
   447  00BE  1E91               	btfss	17,5	;volatile
   448  00BF  28BE               	goto	l72
   449                           
   450                           ;main.c: 72: char var2 = RCREG;
   451  00C0  0023               	movlb	3	; select bank3
   452  00C1  0819               	movf	25,w	;volatile
   453  00C2  0020               	movlb	0	; select bank0
   454  00C3  00A0               	movwf	??_main
   455  00C4  0820               	movf	??_main,w
   456  00C5  00A3               	movwf	main@var2
   457                           
   458                           ;main.c: 73: if(var2 == 'A') RD4 = 1;
   459  00C6  3041               	movlw	65
   460  00C7  0623               	xorwf	main@var2,w
   461  00C8  1903               	btfsc	3,2
   462  00C9  160F               	bsf	15,4	;volatile
   463                           
   464                           ;main.c: 74: _delay((unsigned long)((10000)*(8000000/4000.0)));
   465  00CA  3066               	movlw	102
   466  00CB  00A2               	movwf	??_main+2
   467  00CC  3077               	movlw	119
   468  00CD  00A1               	movwf	??_main+1
   469  00CE  3024               	movlw	36
   470  00CF  00A0               	movwf	??_main
   471  00D0                     u577:	
   472  00D0  0BA0               	decfsz	??_main,f
   473  00D1  28D0               	goto	u577
   474  00D2  0BA1               	decfsz	??_main+1,f
   475  00D3  28D0               	goto	u577
   476  00D4  0BA2               	decfsz	??_main+2,f
   477  00D5  28D0               	goto	u577
   478  00D6  0000               	nop
   479                           
   480                           ;main.c: 75: RD4 = 0;
   481  00D7  0020               	movlb	0	; select bank0
   482  00D8  120F               	bcf	15,4	;volatile
   483                           
   484                           ;main.c: 76: TXREG = '#';
   485  00D9  3023               	movlw	35
   486  00DA  0023               	movlb	3	; select bank3
   487  00DB  009A               	movwf	26	;volatile
   488                           
   489                           ;main.c: 77: _delay((unsigned long)((50)*(8000000/4000.0)));
   490  00DC  3082               	movlw	130
   491  00DD  0020               	movlb	0	; select bank0
   492  00DE  00A1               	movwf	??_main+1
   493  00DF  30DD               	movlw	221
   494  00E0  00A0               	movwf	??_main
   495  00E1                     u587:	
   496  00E1  0BA0               	decfsz	??_main,f
   497  00E2  28E1               	goto	u587
   498  00E3  0BA1               	decfsz	??_main+1,f
   499  00E4  28E1               	goto	u587
   500  00E5  3200               	nop2
   501                           
   502                           ;main.c: 78: TXREG = 'A';
   503  00E6  3041               	movlw	65
   504  00E7  0023               	movlb	3	; select bank3
   505  00E8  009A               	movwf	26	;volatile
   506                           
   507                           ;main.c: 79: _delay((unsigned long)((50)*(8000000/4000.0)));
   508  00E9  3082               	movlw	130
   509  00EA  0020               	movlb	0	; select bank0
   510  00EB  00A1               	movwf	??_main+1
   511  00EC  30DD               	movlw	221
   512  00ED  00A0               	movwf	??_main
   513  00EE                     u597:	
   514  00EE  0BA0               	decfsz	??_main,f
   515  00EF  28EE               	goto	u597
   516  00F0  0BA1               	decfsz	??_main+1,f
   517  00F1  28EE               	goto	u597
   518  00F2  3200               	nop2
   519  00F3  2891               	goto	l795
   520  00F4                     __end_of_main:	
   521                           
   522                           	psect	text1
   523  0156                     __ptext1:	
   524 ;; *************** function _init_serial *****************
   525 ;; Defined at:
   526 ;;		line 144 in file "main.c"
   527 ;; Parameters:    Size  Location     Type
   528 ;;		None
   529 ;; Auto vars:     Size  Location     Type
   530 ;;		None
   531 ;; Return value:  Size  Location     Type
   532 ;;		None               void
   533 ;; Registers used:
   534 ;;		wreg, status,2
   535 ;; Tracked objects:
   536 ;;		On entry : 0/0
   537 ;;		On exit  : 0/0
   538 ;;		Unchanged: 0/0
   539 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   540 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   541 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   543 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   544 ;;Total ram usage:        0 bytes
   545 ;; Hardware stack levels used:    1
   546 ;; Hardware stack levels required when called:    3
   547 ;; This function calls:
   548 ;;		Nothing
   549 ;; This function is called by:
   550 ;;		_main
   551 ;; This function uses a non-reentrant model
   552 ;;
   553                           
   554                           
   555                           ;psect for function _init_serial
   556  0156                     _init_serial:	
   557                           
   558                           ;main.c: 145: SPEN = 1;
   559                           
   560                           ;incstack = 0
   561                           ; Regs used in _init_serial: [wreg+status,2]
   562  0156  0023               	movlb	3	; select bank3
   563  0157  179D               	bsf	29,7	;volatile
   564                           
   565                           ;main.c: 146: SYNC = 0;
   566  0158  121E               	bcf	30,4	;volatile
   567                           
   568                           ;main.c: 147: BRG16 = 0;
   569  0159  119F               	bcf	31,3	;volatile
   570                           
   571                           ;main.c: 148: BRGH = 1;
   572  015A  151E               	bsf	30,2	;volatile
   573                           
   574                           ;main.c: 149: SPBRGH = 0x00;
   575  015B  019C               	clrf	28	;volatile
   576                           
   577                           ;main.c: 150: SPBRGL = 51;
   578  015C  3033               	movlw	51
   579  015D  009B               	movwf	27	;volatile
   580                           
   581                           ;main.c: 151: CREN = 1;
   582  015E  161D               	bsf	29,4	;volatile
   583                           
   584                           ;main.c: 152: SREN = 1;
   585  015F  169D               	bsf	29,5	;volatile
   586                           
   587                           ;main.c: 153: TXEN = 1;
   588  0160  169E               	bsf	30,5	;volatile
   589  0161  0008               	return
   590  0162                     __end_of_init_serial:	
   591                           
   592                           	psect	text2
   593  0145                     __ptext2:	
   594 ;; *************** function _init *****************
   595 ;; Defined at:
   596 ;;		line 95 in file "main.c"
   597 ;; Parameters:    Size  Location     Type
   598 ;;		None
   599 ;; Auto vars:     Size  Location     Type
   600 ;;		None
   601 ;; Return value:  Size  Location     Type
   602 ;;		None               void
   603 ;; Registers used:
   604 ;;		wreg
   605 ;; Tracked objects:
   606 ;;		On entry : 0/0
   607 ;;		On exit  : 0/0
   608 ;;		Unchanged: 0/0
   609 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   610 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   611 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   613 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   614 ;;Total ram usage:        0 bytes
   615 ;; Hardware stack levels used:    1
   616 ;; Hardware stack levels required when called:    3
   617 ;; This function calls:
   618 ;;		Nothing
   619 ;; This function is called by:
   620 ;;		_main
   621 ;; This function uses a non-reentrant model
   622 ;;
   623                           
   624                           
   625                           ;psect for function _init
   626  0145                     _init:	
   627                           
   628                           ;main.c: 97: TRISCbits.TRISC2 = 0;
   629                           
   630                           ;incstack = 0
   631                           ; Regs used in _init: [wreg]
   632  0145  0021               	movlb	1	; select bank1
   633  0146  110E               	bcf	14,2	;volatile
   634                           
   635                           ;main.c: 98: RC2 = 1;
   636  0147  0020               	movlb	0	; select bank0
   637  0148  150E               	bsf	14,2	;volatile
   638                           
   639                           ;main.c: 99: TRISDbits.TRISD4 = 0;
   640  0149  0021               	movlb	1	; select bank1
   641  014A  120F               	bcf	15,4	;volatile
   642                           
   643                           ;main.c: 104: T0CS = 0;
   644  014B  1295               	bcf	21,5	;volatile
   645                           
   646                           ;main.c: 105: T0SE = 1;
   647  014C  1615               	bsf	21,4	;volatile
   648                           
   649                           ;main.c: 106: PSA = 0;
   650  014D  1195               	bcf	21,3	;volatile
   651                           
   652                           ;main.c: 107: PS2 = 0;
   653  014E  1115               	bcf	21,2	;volatile
   654                           
   655                           ;main.c: 108: PS1 = 0;
   656  014F  1095               	bcf	21,1	;volatile
   657                           
   658                           ;main.c: 109: PS0 = 1;
   659  0150  1415               	bsf	21,0	;volatile
   660                           
   661                           ;main.c: 110: TMR0 = 6;
   662  0151  3006               	movlw	6
   663  0152  0020               	movlb	0	; select bank0
   664  0153  0095               	movwf	21	;volatile
   665                           
   666                           ;main.c: 111: TMR0IE = 1;
   667  0154  168B               	bsf	11,5	;volatile
   668  0155  0008               	return
   669  0156                     __end_of_init:	
   670                           
   671                           	psect	intentry
   672  0004                     __pintentry:	
   673 ;; *************** function _prekidna_rutina *****************
   674 ;; Defined at:
   675 ;;		line 85 in file "main.c"
   676 ;; Parameters:    Size  Location     Type
   677 ;;		None
   678 ;; Auto vars:     Size  Location     Type
   679 ;;		None
   680 ;; Return value:  Size  Location     Type
   681 ;;		None               void
   682 ;; Registers used:
   683 ;;		wreg, status,2, status,0, pclath, cstack
   684 ;; Tracked objects:
   685 ;;		On entry : 0/0
   686 ;;		On exit  : 0/0
   687 ;;		Unchanged: 0/0
   688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   690 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   691 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   692 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   693 ;;Total ram usage:        1 bytes
   694 ;; Hardware stack levels used:    1
   695 ;; Hardware stack levels required when called:    2
   696 ;; This function calls:
   697 ;;		_rf_send
   698 ;; This function is called by:
   699 ;;		Interrupt level 1
   700 ;; This function uses a non-reentrant model
   701 ;;
   702                           
   703  0004                     _prekidna_rutina:	
   704                           
   705                           ;incstack = 0
   706                           ; Regs used in _prekidna_rutina: [wreg+status,2+status,0+pclath+cstack]
   707  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
   708  0005  3180               	pagesel	$
   709  0006  0020               	movlb	0	; select bank0
   710  0007  087F               	movf	127,w
   711  0008  00FC               	movwf	??_prekidna_rutina
   712                           
   713                           ;main.c: 87: if(TMR0IE && TMR0IF)
   714  0009  1A8B               	btfsc	11,5	;volatile
   715  000A  1D0B               	btfss	11,2	;volatile
   716  000B  2811               	goto	i1l82
   717                           
   718                           ;main.c: 88: {
   719                           ;main.c: 89: TMR0 = 6;
   720  000C  3006               	movlw	6
   721  000D  0095               	movwf	21	;volatile
   722                           
   723                           ;main.c: 90: TMR0IF = 0;
   724  000E  110B               	bcf	11,2	;volatile
   725                           
   726                           ;main.c: 91: rf_send();
   727  000F  3180  2020         	fcall	_rf_send
   728  0011                     i1l82:	
   729  0011  087C               	movf	??_prekidna_rutina,w
   730  0012  0020               	movlb	0	; select bank0
   731  0013  00FF               	movwf	127
   732  0014  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
   733  0015  0009               	retfie
   734  0016                     __end_of_prekidna_rutina:	
   735                           
   736                           	psect	text4
   737  0020                     __ptext4:	
   738 ;; *************** function _rf_send *****************
   739 ;; Defined at:
   740 ;;		line 114 in file "main.c"
   741 ;; Parameters:    Size  Location     Type
   742 ;;		None
   743 ;; Auto vars:     Size  Location     Type
   744 ;;		None
   745 ;; Return value:  Size  Location     Type
   746 ;;		None               void
   747 ;; Registers used:
   748 ;;		wreg, status,2, status,0, pclath, cstack
   749 ;; Tracked objects:
   750 ;;		On entry : 0/0
   751 ;;		On exit  : 0/0
   752 ;;		Unchanged: 0/0
   753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   754 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   755 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   756 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   757 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   758 ;;Total ram usage:        3 bytes
   759 ;; Hardware stack levels used:    1
   760 ;; Hardware stack levels required when called:    1
   761 ;; This function calls:
   762 ;;		___awdiv
   763 ;; This function is called by:
   764 ;;		_prekidna_rutina
   765 ;; This function uses a non-reentrant model
   766 ;;
   767                           
   768                           
   769                           ;psect for function _rf_send
   770  0020                     _rf_send:	
   771                           
   772                           ;main.c: 116: if (t == 0) RC2 = 1;
   773                           
   774                           ;incstack = 0
   775                           ; Regs used in _rf_send: [wreg+status,2+status,0+pclath+cstack]
   776  0020  087D               	movf	_t,w
   777  0021  1903               	btfsc	3,2
   778  0022  282F               	goto	i1l771
   779                           
   780                           ;main.c: 117: else if (t < 10) RC2 = !RC2;
   781  0023  300A               	movlw	10
   782  0024  027D               	subwf	_t,w
   783  0025  1803               	skipnc
   784  0026  282B               	goto	i1l769
   785  0027  3004               	movlw	4
   786  0028  0020               	movlb	0	; select bank0
   787  0029  068E               	xorwf	14,f
   788  002A  2873               	goto	i1l785
   789  002B                     i1l769:	
   790                           
   791                           ;main.c: 118: else if (t < 16) RC2 = 1;
   792  002B  3010               	movlw	16
   793  002C  027D               	subwf	_t,w
   794  002D  1803               	skipnc
   795  002E  2831               	goto	i1l773
   796  002F                     i1l771:	
   797  002F  0020               	movlb	0	; select bank0
   798  0030  2872               	goto	i1l100
   799  0031                     i1l773:	
   800                           
   801                           ;main.c: 119: else if (t < 17) RC2 = 0;
   802  0031  3011               	movlw	17
   803  0032  027D               	subwf	_t,w
   804  0033  1803               	skipnc
   805  0034  2837               	goto	i1l94
   806  0035  0020               	movlb	0	; select bank0
   807  0036  2870               	goto	i1l783
   808  0037                     i1l94:	
   809                           
   810                           ;main.c: 120: else
   811                           ;main.c: 121: {
   812                           ;main.c: 122: if (t%2 == 1)
   813  0037  1C7D               	btfss	_t,0
   814  0038  2855               	goto	i1l781
   815                           
   816                           ;main.c: 123: {
   817                           ;main.c: 124: if (((pod) & (1 << ((t - 17)/2)))) RC2 = 1;
   818  0039  3001               	movlw	1
   819  003A  00F9               	movwf	??_rf_send
   820  003B  3002               	movlw	2
   821  003C  00F0               	movwf	___awdiv@divisor
   822  003D  3000               	movlw	0
   823  003E  00F1               	movwf	___awdiv@divisor+1
   824  003F  087D               	movf	_t,w
   825  0040  3EEF               	addlw	239
   826  0041  00F2               	movwf	___awdiv@dividend
   827  0042  30FF               	movlw	255
   828  0043  1803               	skipnc
   829  0044  3000               	movlw	0
   830  0045  00F3               	movwf	___awdiv@dividend+1
   831  0046  3180  20F4  3180   	fcall	___awdiv
   832  0049  0870               	movf	?___awdiv,w
   833  004A  0A89               	incf	9,f
   834  004B  284D               	goto	u43_24
   835  004C                     u43_25:	
   836  004C  35F9               	lslf	??_rf_send,f
   837  004D                     u43_24:	
   838  004D  0B89               	decfsz	9,f
   839  004E  284C               	goto	u43_25
   840  004F  0879               	movf	??_rf_send,w
   841  0050  0020               	movlb	0	; select bank0
   842  0051  0525               	andwf	_pod,w
   843  0052  1903               	btfsc	3,2
   844  0053  2870               	goto	i1l783
   845  0054  2872               	goto	i1l100
   846  0055                     i1l781:	
   847                           ;main.c: 126: }
   848                           
   849                           ;main.c: 125: else RC2 = 0;
   850                           
   851                           
   852                           ;main.c: 127: else
   853                           ;main.c: 128: {
   854                           ;main.c: 129: if (((pod) & (1 << ((t - 17)/2)))) RC2 = 0;
   855  0055  3001               	movlw	1
   856  0056  00F9               	movwf	??_rf_send
   857  0057  3002               	movlw	2
   858  0058  00F0               	movwf	___awdiv@divisor
   859  0059  3000               	movlw	0
   860  005A  00F1               	movwf	___awdiv@divisor+1
   861  005B  087D               	movf	_t,w
   862  005C  3EEF               	addlw	239
   863  005D  00F2               	movwf	___awdiv@dividend
   864  005E  30FF               	movlw	255
   865  005F  1803               	skipnc
   866  0060  3000               	movlw	0
   867  0061  00F3               	movwf	___awdiv@dividend+1
   868  0062  3180  20F4  3180   	fcall	___awdiv
   869  0065  0870               	movf	?___awdiv,w
   870  0066  0A89               	incf	9,f
   871  0067  2869               	goto	u45_24
   872  0068                     u45_25:	
   873  0068  35F9               	lslf	??_rf_send,f
   874  0069                     u45_24:	
   875  0069  0B89               	decfsz	9,f
   876  006A  2868               	goto	u45_25
   877  006B  0879               	movf	??_rf_send,w
   878  006C  0020               	movlb	0	; select bank0
   879  006D  0525               	andwf	_pod,w
   880  006E  1903               	btfsc	3,2
   881  006F  2872               	goto	i1l100
   882  0070                     i1l783:	
   883  0070  110E               	bcf	14,2	;volatile
   884  0071  2873               	goto	i1l785
   885  0072                     i1l100:	
   886                           
   887                           ;main.c: 130: else RC2 = 1;
   888  0072  150E               	bsf	14,2	;volatile
   889  0073                     i1l785:	
   890                           
   891                           ;main.c: 131: }
   892                           ;main.c: 132: }
   893                           ;main.c: 133: t++;
   894  0073  3001               	movlw	1
   895  0074  00F9               	movwf	??_rf_send
   896  0075  0879               	movf	??_rf_send,w
   897  0076  07FD               	addwf	_t,f
   898                           
   899                           ;main.c: 134: if (t == 34)
   900  0077  3022               	movlw	34
   901  0078  067D               	xorwf	_t,w
   902  0079  1D03               	btfss	3,2
   903  007A  0008               	return
   904                           
   905                           ;main.c: 135: {
   906                           ;main.c: 136: RC2 = 0;
   907  007B  110E               	bcf	14,2	;volatile
   908                           
   909                           ;main.c: 137: t = 0;
   910  007C  01FD               	clrf	_t
   911                           
   912                           ;main.c: 138: _delay((unsigned long)((1000)*(8000000/4000.0)));
   913  007D  300B               	movlw	11
   914  007E  00FB               	movwf	??_rf_send+2
   915  007F  3026               	movlw	38
   916  0080  00FA               	movwf	??_rf_send+1
   917  0081  3066               	movlw	102
   918  0082  00F9               	movwf	??_rf_send
   919  0083                     u60_27:	
   920  0083  0BF9               	decfsz	??_rf_send,f
   921  0084  2883               	goto	u60_27
   922  0085  0BFA               	decfsz	??_rf_send+1,f
   923  0086  2883               	goto	u60_27
   924  0087  0BFB               	decfsz	??_rf_send+2,f
   925  0088  2883               	goto	u60_27
   926  0089  3200               	nop2
   927  008A  0008               	return
   928  008B                     __end_of_rf_send:	
   929                           
   930                           	psect	text5
   931  00F4                     __ptext5:	
   932 ;; *************** function ___awdiv *****************
   933 ;; Defined at:
   934 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
   935 ;; Parameters:    Size  Location     Type
   936 ;;  divisor         2    0[COMMON] int 
   937 ;;  dividend        2    2[COMMON] int 
   938 ;; Auto vars:     Size  Location     Type
   939 ;;  quotient        2    7[COMMON] int 
   940 ;;  sign            1    6[COMMON] unsigned char 
   941 ;;  counter         1    5[COMMON] unsigned char 
   942 ;; Return value:  Size  Location     Type
   943 ;;                  2    0[COMMON] int 
   944 ;; Registers used:
   945 ;;		wreg, status,2, status,0
   946 ;; Tracked objects:
   947 ;;		On entry : 0/0
   948 ;;		On exit  : 0/0
   949 ;;		Unchanged: 0/0
   950 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   951 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   952 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   953 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   954 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   955 ;;Total ram usage:        9 bytes
   956 ;; Hardware stack levels used:    1
   957 ;; This function calls:
   958 ;;		Nothing
   959 ;; This function is called by:
   960 ;;		_rf_send
   961 ;; This function uses a non-reentrant model
   962 ;;
   963                           
   964                           
   965                           ;psect for function ___awdiv
   966  00F4                     ___awdiv:	
   967                           
   968                           ;incstack = 0
   969                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
   970  00F4  01F6               	clrf	___awdiv@sign
   971  00F5  1FF1               	btfss	___awdiv@divisor+1,7
   972  00F6  28FE               	goto	i1l707
   973  00F7  09F0               	comf	___awdiv@divisor,f
   974  00F8  09F1               	comf	___awdiv@divisor+1,f
   975  00F9  0AF0               	incf	___awdiv@divisor,f
   976  00FA  1903               	skipnz
   977  00FB  0AF1               	incf	___awdiv@divisor+1,f
   978  00FC  01F6               	clrf	___awdiv@sign
   979  00FD  0AF6               	incf	___awdiv@sign,f
   980  00FE                     i1l707:	
   981  00FE  1FF3               	btfss	___awdiv@dividend+1,7
   982  00FF  2909               	goto	i1l713
   983  0100  09F2               	comf	___awdiv@dividend,f
   984  0101  09F3               	comf	___awdiv@dividend+1,f
   985  0102  0AF2               	incf	___awdiv@dividend,f
   986  0103  1903               	skipnz
   987  0104  0AF3               	incf	___awdiv@dividend+1,f
   988  0105  3001               	movlw	1
   989  0106  00F4               	movwf	??___awdiv
   990  0107  0874               	movf	??___awdiv,w
   991  0108  06F6               	xorwf	___awdiv@sign,f
   992  0109                     i1l713:	
   993  0109  01F7               	clrf	___awdiv@quotient
   994  010A  01F8               	clrf	___awdiv@quotient+1
   995  010B  0870               	movf	___awdiv@divisor,w
   996  010C  0471               	iorwf	___awdiv@divisor+1,w
   997  010D  1903               	btfsc	3,2
   998  010E  2938               	goto	i1l735
   999  010F  01F5               	clrf	___awdiv@counter
  1000  0110  0AF5               	incf	___awdiv@counter,f
  1001  0111                     i1l723:	
  1002  0111  1BF1               	btfsc	___awdiv@divisor+1,7
  1003  0112  291D               	goto	i1l725
  1004  0113  3001               	movlw	1
  1005  0114                     u31_25:	
  1006  0114  35F0               	lslf	___awdiv@divisor,f
  1007  0115  0DF1               	rlf	___awdiv@divisor+1,f
  1008  0116  0B89               	decfsz	9,f
  1009  0117  2914               	goto	u31_25
  1010  0118  3001               	movlw	1
  1011  0119  00F4               	movwf	??___awdiv
  1012  011A  0874               	movf	??___awdiv,w
  1013  011B  07F5               	addwf	___awdiv@counter,f
  1014  011C  2911               	goto	i1l723
  1015  011D                     i1l725:	
  1016  011D  3001               	movlw	1
  1017  011E                     u33_25:	
  1018  011E  35F7               	lslf	___awdiv@quotient,f
  1019  011F  0DF8               	rlf	___awdiv@quotient+1,f
  1020  0120  0B89               	decfsz	9,f
  1021  0121  291E               	goto	u33_25
  1022  0122  0871               	movf	___awdiv@divisor+1,w
  1023  0123  0273               	subwf	___awdiv@dividend+1,w
  1024  0124  1D03               	skipz
  1025  0125  2928               	goto	u34_25
  1026  0126  0870               	movf	___awdiv@divisor,w
  1027  0127  0272               	subwf	___awdiv@dividend,w
  1028  0128                     u34_25:	
  1029  0128  1C03               	skipc
  1030  0129  292F               	goto	i1l731
  1031  012A  0870               	movf	___awdiv@divisor,w
  1032  012B  02F2               	subwf	___awdiv@dividend,f
  1033  012C  0871               	movf	___awdiv@divisor+1,w
  1034  012D  3BF3               	subwfb	___awdiv@dividend+1,f
  1035  012E  1477               	bsf	___awdiv@quotient,0
  1036  012F                     i1l731:	
  1037  012F  3001               	movlw	1
  1038  0130                     u35_25:	
  1039  0130  36F1               	lsrf	___awdiv@divisor+1,f
  1040  0131  0CF0               	rrf	___awdiv@divisor,f
  1041  0132  0B89               	decfsz	9,f
  1042  0133  2930               	goto	u35_25
  1043  0134  3001               	movlw	1
  1044  0135  02F5               	subwf	___awdiv@counter,f
  1045  0136  1D03               	btfss	3,2
  1046  0137  291D               	goto	i1l725
  1047  0138                     i1l735:	
  1048  0138  0876               	movf	___awdiv@sign,w
  1049  0139  1903               	btfsc	3,2
  1050  013A  2940               	goto	i1l739
  1051  013B  09F7               	comf	___awdiv@quotient,f
  1052  013C  09F8               	comf	___awdiv@quotient+1,f
  1053  013D  0AF7               	incf	___awdiv@quotient,f
  1054  013E  1903               	skipnz
  1055  013F  0AF8               	incf	___awdiv@quotient+1,f
  1056  0140                     i1l739:	
  1057  0140  0878               	movf	___awdiv@quotient+1,w
  1058  0141  00F1               	movwf	?___awdiv+1
  1059  0142  0877               	movf	___awdiv@quotient,w
  1060  0143  00F0               	movwf	?___awdiv
  1061  0144  0008               	return
  1062  0145                     __end_of___awdiv:	
  1063  007E                     btemp	set	126	;btemp
  1064  007E                     int$flags	set	126
  1065  007E                     wtemp	set	126
  1066  007E                     wtemp0	set	126
  1067  0080                     wtemp1	set	128
  1068  0082                     wtemp2	set	130
  1069  0084                     wtemp3	set	132
  1070  0086                     wtemp4	set	134
  1071  0088                     wtemp5	set	136
  1072  007F                     wtemp6	set	127
  1073  007E                     ttemp	set	126
  1074  007E                     ttemp0	set	126
  1075  0081                     ttemp1	set	129
  1076  0084                     ttemp2	set	132
  1077  0087                     ttemp3	set	135
  1078  007F                     ttemp4	set	127
  1079  007E                     ltemp	set	126
  1080  007E                     ltemp0	set	126
  1081  0082                     ltemp1	set	130
  1082  0086                     ltemp2	set	134
  1083  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80      5       6
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _prekidna_rutina in COMMON

    _prekidna_rutina->_rf_send
    _rf_send->___awdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _prekidna_rutina in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _prekidna_rutina in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _prekidna_rutina in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _prekidna_rutina in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _prekidna_rutina in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _prekidna_rutina in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _prekidna_rutina in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _prekidna_rutina in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _prekidna_rutina in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _prekidna_rutina in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _prekidna_rutina in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _prekidna_rutina in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _prekidna_rutina in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0      68
                                              0 BANK0      5     5      0
                               _init
                        _init_serial
 ---------------------------------------------------------------------------------
 (1) _init_serial                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _prekidna_rutina                                      1     1      0     512
                                             12 COMMON     1     1      0
                            _rf_send
 ---------------------------------------------------------------------------------
 (3) _rf_send                                              3     3      0     512
                                              9 COMMON     3     3      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              9     5      4     512
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init
   _init_serial

 _prekidna_rutina (ROOT)
   _rf_send
     ___awdiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      D       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      5       6       5        7.5%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      14      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      14      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Sat Apr 09 14:33:45 2016

                       _t 007D               __CFG_CP$OFF 0000                        l72 00BE  
            ___awdiv@sign 0076                       l803 00B9                       l795 0091  
                     _RC2 0072                       _RD4 007C                       _PS0 04A8  
                     _PS1 04A9                       _PS2 04AA              __CFG_CPD$OFF 0000  
                     u557 00A6                       u567 00B3                       _PSA 04AB  
                     u577 00D0                       u587 00E1                       u597 00EE  
                     _pod 0025              __CFG_BORV$LO 0000                       wreg 0009  
            __CFG_FOSC$HS 0000              __CFG_LVP$OFF 0000                      _BRGH 0CF2  
                    _CREN 0CEC                      _T0CS 04AD                      _T0SE 04AC  
                    _RCIF 008D                      i1l82 0011                      i1l94 0037  
                    _TMR0 0015                      _SPEN 0CEF                      _SREN 0CED  
                    _TXEN 0CF5                      _SYNC 0CF4              __CFG_WRT$OFF 0000  
                    _main 008B                      _init 0145                      btemp 007E  
                    ltemp 007E                      start 0016                      ttemp 007E  
                    wtemp 007E             __CFG_IESO$OFF 0000             __CFG_MCLRE$ON 0000  
                   ?_main 0070                     ?_init 0070           __end_of___awdiv 0145  
                   _BRG16 0CFB             __CFG_WDTE$OFF 0000           ___awdiv@divisor 0070  
                   i1l100 0072                     i1l713 0109                     i1l731 012F  
                   i1l723 0111                     i1l707 00FE                     i1l725 011D  
                   i1l735 0138                     i1l739 0140                     i1l771 002F  
                   i1l781 0055                     i1l773 0031                     i1l783 0070  
                   i1l769 002B                     i1l785 0073           ___awdiv@counter 0075  
                   _RCREG 0199                     u31_25 0114                     u33_25 011E  
                   u34_25 0128                     u43_24 004D                     u35_25 0130  
                   u43_25 004C                     u60_27 0083                     u45_24 0069  
                   u45_25 0068                     _SSPEN 10AD                     _TXREG 019A  
            ?_init_serial 0070            __CFG_FCMEN$OFF 0000           __end_of_rf_send 008B  
          __CFG_BOREN$OFF 0000                     ltemp0 007E                     ltemp1 0082  
                   ltemp2 0086                     ltemp3 0080                     ttemp0 007E  
                   ttemp1 0081                     ttemp2 0084                     ttemp3 0087  
                   ttemp4 007F                     status 0003                     wtemp0 007E  
                   wtemp1 0080                     wtemp2 0082                     wtemp3 0084  
                   wtemp4 0086                     wtemp5 0088                     wtemp6 007F  
         __initialization 0018              __end_of_main 00F4              __end_of_init 0156  
                  ??_main 0020                    ??_init 0020            __CFG_PLLEN$OFF 0000  
        ___awdiv@dividend 0072                    _TMR0IE 005D                    _TMR0IF 005A  
                  _SPBRGH 019C                    _SPBRGL 019B            __CFG_PWRTE$OFF 0000  
               ??___awdiv 0074           _prekidna_rutina 0004          ___awdiv@quotient 0077  
               ??_rf_send 0079   __end_of__initialization 001C            __pcstackCOMMON 0070  
            __pidataBANK0 0162      __size_of_init_serial 000C           __CFG_VCAPEN$OFF 0000  
 __end_of_prekidna_rutina 0016                __pmaintext 008B                __pintentry 0004  
                 ___awdiv 00F4           __CFG_STVREN$OFF 0000                   __ptext1 0156  
                 __ptext2 0145                   __ptext4 0020                   __ptext5 00F4  
                 _rf_send 0020                   main@var 0024      end_of_initialization 001C  
        ?_prekidna_rutina 0070                 _TRISCbits 008E                 _TRISDbits 008F  
     start_initialization 0018               __pdataBANK0 0025             ??_init_serial 0020  
             __pbssCOMMON 007D                 ___latbits 0003             __pcstackBANK0 0020  
                ?___awdiv 0070                  ?_rf_send 0070       __end_of_init_serial 0162  
        __size_of___awdiv 0051  __size_of_prekidna_rutina 0012               _init_serial 0156  
        __size_of_rf_send 006B             __size_of_main 0069             __size_of_init 0011  
                int$flags 007E                  main@var2 0023                  intlevel1 0000  
       __CFG_CLKOUTEN$OFF 0000         ??_prekidna_rutina 007C  
