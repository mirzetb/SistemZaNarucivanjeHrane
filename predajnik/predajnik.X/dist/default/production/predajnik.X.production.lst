

Microchip Technology PIC LITE Macro Assembler V1.35 build -356382666 
                                                                                               Thu Jun 30 13:04:45 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	16F1939
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	dabs	1,0x7E,2
    17  0000                     	;# 
    18  0001                     	;# 
    19  0002                     	;# 
    20  0003                     	;# 
    21  0004                     	;# 
    22  0005                     	;# 
    23  0006                     	;# 
    24  0007                     	;# 
    25  0008                     	;# 
    26  0009                     	;# 
    27  000A                     	;# 
    28  000B                     	;# 
    29  000C                     	;# 
    30  000D                     	;# 
    31  000E                     	;# 
    32  000F                     	;# 
    33  0010                     	;# 
    34  0011                     	;# 
    35  0012                     	;# 
    36  0013                     	;# 
    37  0015                     	;# 
    38  0016                     	;# 
    39  0016                     	;# 
    40  0017                     	;# 
    41  0018                     	;# 
    42  0019                     	;# 
    43  001A                     	;# 
    44  001B                     	;# 
    45  001C                     	;# 
    46  001E                     	;# 
    47  001F                     	;# 
    48  008C                     	;# 
    49  008D                     	;# 
    50  008E                     	;# 
    51  008F                     	;# 
    52  0090                     	;# 
    53  0091                     	;# 
    54  0092                     	;# 
    55  0093                     	;# 
    56  0095                     	;# 
    57  0096                     	;# 
    58  0097                     	;# 
    59  0098                     	;# 
    60  0099                     	;# 
    61  009A                     	;# 
    62  009B                     	;# 
    63  009B                     	;# 
    64  009C                     	;# 
    65  009D                     	;# 
    66  009E                     	;# 
    67  010C                     	;# 
    68  010D                     	;# 
    69  010E                     	;# 
    70  010F                     	;# 
    71  0110                     	;# 
    72  0111                     	;# 
    73  0112                     	;# 
    74  0113                     	;# 
    75  0114                     	;# 
    76  0115                     	;# 
    77  0116                     	;# 
    78  0117                     	;# 
    79  0118                     	;# 
    80  0119                     	;# 
    81  011A                     	;# 
    82  011B                     	;# 
    83  011D                     	;# 
    84  018C                     	;# 
    85  018D                     	;# 
    86  018F                     	;# 
    87  0190                     	;# 
    88  0191                     	;# 
    89  0191                     	;# 
    90  0192                     	;# 
    91  0193                     	;# 
    92  0193                     	;# 
    93  0193                     	;# 
    94  0194                     	;# 
    95  0195                     	;# 
    96  0196                     	;# 
    97  0199                     	;# 
    98  019A                     	;# 
    99  019B                     	;# 
   100  019B                     	;# 
   101  019B                     	;# 
   102  019B                     	;# 
   103  019C                     	;# 
   104  019C                     	;# 
   105  019D                     	;# 
   106  019E                     	;# 
   107  019F                     	;# 
   108  020D                     	;# 
   109  0210                     	;# 
   110  0211                     	;# 
   111  0212                     	;# 
   112  0213                     	;# 
   113  0214                     	;# 
   114  0215                     	;# 
   115  0215                     	;# 
   116  0216                     	;# 
   117  0217                     	;# 
   118  0291                     	;# 
   119  0291                     	;# 
   120  0292                     	;# 
   121  0293                     	;# 
   122  0294                     	;# 
   123  0295                     	;# 
   124  0295                     	;# 
   125  0296                     	;# 
   126  0298                     	;# 
   127  0298                     	;# 
   128  0299                     	;# 
   129  029A                     	;# 
   130  029B                     	;# 
   131  029C                     	;# 
   132  029C                     	;# 
   133  029D                     	;# 
   134  029E                     	;# 
   135  029F                     	;# 
   136  0311                     	;# 
   137  0311                     	;# 
   138  0312                     	;# 
   139  0313                     	;# 
   140  0314                     	;# 
   141  0315                     	;# 
   142  0315                     	;# 
   143  0316                     	;# 
   144  0318                     	;# 
   145  0318                     	;# 
   146  0319                     	;# 
   147  031A                     	;# 
   148  031C                     	;# 
   149  031C                     	;# 
   150  031D                     	;# 
   151  031E                     	;# 
   152  0394                     	;# 
   153  0395                     	;# 
   154  0396                     	;# 
   155  0415                     	;# 
   156  0416                     	;# 
   157  0417                     	;# 
   158  041C                     	;# 
   159  041D                     	;# 
   160  041E                     	;# 
   161  0791                     	;# 
   162  0792                     	;# 
   163  0793                     	;# 
   164  0794                     	;# 
   165  0795                     	;# 
   166  0798                     	;# 
   167  0799                     	;# 
   168  079A                     	;# 
   169  07A0                     	;# 
   170  07A1                     	;# 
   171  07A2                     	;# 
   172  07A3                     	;# 
   173  07A4                     	;# 
   174  07A5                     	;# 
   175  07A6                     	;# 
   176  07A7                     	;# 
   177  07A8                     	;# 
   178  07A9                     	;# 
   179  07AA                     	;# 
   180  07AB                     	;# 
   181  0FE4                     	;# 
   182  0FE5                     	;# 
   183  0FE6                     	;# 
   184  0FE7                     	;# 
   185  0FE8                     	;# 
   186  0FE9                     	;# 
   187  0FEA                     	;# 
   188  0FEB                     	;# 
   189  0FED                     	;# 
   190  0FEE                     	;# 
   191  0FEF                     	;# 
   192  0015                     _TMR0	set	21
   193  005F                     _GIE	set	95
   194  005E                     _PEIE	set	94
   195  0072                     _RC2	set	114
   196  008D                     _RCIF	set	141
   197  005D                     _TMR0IE	set	93
   198  005A                     _TMR0IF	set	90
   199  008E                     _TRISCbits	set	142
   200  04A8                     _PS0	set	1192
   201  04A9                     _PS1	set	1193
   202  04AA                     _PS2	set	1194
   203  04AB                     _PSA	set	1195
   204  048D                     _RCIE	set	1165
   205  04AD                     _T0CS	set	1197
   206  04AC                     _T0SE	set	1196
   207  0199                     _RCREG	set	409
   208  019C                     _SPBRGH	set	412
   209  019B                     _SPBRGL	set	411
   210  0CFB                     _BRG16	set	3323
   211  0CF2                     _BRGH	set	3314
   212  0CEC                     _CREN	set	3308
   213  0CEF                     _SPEN	set	3311
   214  0CED                     _SREN	set	3309
   215  0CF4                     _SYNC	set	3316
   216  0CF5                     _TXEN	set	3317
   217                           
   218                           ; #config settings
   219  0000                     
   220                           	psect	cinit
   221  0040                     start_initialization:	
   222  0040                     __initialization:	
   223                           
   224                           ; Clear objects allocated to COMMON
   225  0040  01FC               	clrf	__pbssCOMMON& (0+127)
   226  0041  01FD               	clrf	(__pbssCOMMON+1)& (0+127)
   227                           
   228                           ; Clear objects allocated to BANK0
   229  0042  01A0               	clrf	__pbssBANK0& (0+127)
   230  0043  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   231  0044  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   232  0045  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   233  0046                     end_of_initialization:	
   234                           ;End of C runtime variable initialization code
   235                           
   236  0046                     __end_of__initialization:	
   237  0046  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   238  0047  0020               	movlb	0
   239  0048  3181  292C         	ljmp	_main	;jump to C main() function
   240                           
   241                           	psect	bssCOMMON
   242  007C                     __pbssCOMMON:	
   243  007C                     _pcData:	
   244  007C                     	ds	1
   245  007D                     _t:	
   246  007D                     	ds	1
   247                           
   248                           	psect	bssBANK0
   249  0020                     __pbssBANK0:	
   250  0020                     _rf_data:	
   251  0020                     	ds	2
   252  0022                     _byteNo:	
   253  0022                     	ds	1
   254  0023                     _send:	
   255  0023                     	ds	1
   256                           
   257                           	psect	cstackCOMMON
   258  0070                     __pcstackCOMMON:	
   259  0070                     ?_init:	
   260  0070                     ?_rf_send:	
   261                           ; 0 bytes @ 0x0
   262                           
   263  0070                     ?_init_rf:	
   264                           ; 0 bytes @ 0x0
   265                           
   266  0070                     ?_init_serial:	
   267                           ; 0 bytes @ 0x0
   268                           
   269  0070                     ?_main:	
   270                           ; 0 bytes @ 0x0
   271                           
   272  0070                     ?_prekidna_rutina:	
   273                           ; 0 bytes @ 0x0
   274                           
   275  0070                     ?___awdiv:	
   276                           ; 0 bytes @ 0x0
   277                           
   278  0070                     ___awdiv@divisor:	
   279                           ; 2 bytes @ 0x0
   280                           
   281                           
   282                           ; 2 bytes @ 0x0
   283  0070                     	ds	2
   284  0072                     ___awdiv@dividend:	
   285                           
   286                           ; 2 bytes @ 0x2
   287  0072                     	ds	2
   288  0074                     ??___awdiv:	
   289                           
   290                           ; 0 bytes @ 0x4
   291  0074                     	ds	1
   292  0075                     ___awdiv@counter:	
   293                           
   294                           ; 1 bytes @ 0x5
   295  0075                     	ds	1
   296  0076                     ___awdiv@sign:	
   297                           
   298                           ; 1 bytes @ 0x6
   299  0076                     	ds	1
   300  0077                     ___awdiv@quotient:	
   301                           
   302                           ; 2 bytes @ 0x7
   303  0077                     	ds	2
   304  0079                     ??_rf_send:	
   305                           
   306                           ; 0 bytes @ 0x9
   307  0079                     	ds	1
   308  007A                     ??_prekidna_rutina:	
   309                           
   310                           ; 0 bytes @ 0xA
   311  007A                     	ds	2
   312                           
   313                           	psect	cstackBANK0
   314  0000                     __pcstackBANK0:	
   315  0000                     ??_init:	
   316  0000                     ??_init_rf:	
   317                           ; 0 bytes @ 0x0
   318                           
   319  0000                     ??_init_serial:	
   320                           ; 0 bytes @ 0x0
   321                           
   322  0000                     ??_main:	
   323                           ; 0 bytes @ 0x0
   324                           
   325                           
   326                           	psect	maintext
   327  012C                     __pmaintext:	
   328                           ; 0 bytes @ 0x0
   329 ;;
   330 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   331 ;;
   332 ;; *************** function _main *****************
   333 ;; Defined at:
   334 ;;		line 69 in file "main.c"
   335 ;; Parameters:    Size  Location     Type
   336 ;;		None
   337 ;; Auto vars:     Size  Location     Type
   338 ;;		None
   339 ;; Return value:  Size  Location     Type
   340 ;;		None               void
   341 ;; Registers used:
   342 ;;		wreg, status,2, status,0, pclath, cstack
   343 ;; Tracked objects:
   344 ;;		On entry : B1F/0
   345 ;;		On exit  : 0/0
   346 ;;		Unchanged: 0/0
   347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   348 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   349 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   350 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   351 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   352 ;;Total ram usage:        0 bytes
   353 ;; Hardware stack levels required when called:    5
   354 ;; This function calls:
   355 ;;		_init
   356 ;; This function is called by:
   357 ;;		Startup code after reset
   358 ;; This function uses a non-reentrant model
   359 ;;
   360                           
   361                           
   362                           ;psect for function _main
   363  012C                     _main:	
   364                           
   365                           ;main.c: 70: init();
   366                           
   367                           ;incstack = 0
   368                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   369  012C  3181  2106  3181   	fcall	_init
   370  012F                     l71:	
   371                           ;main.c: 71: while(1){
   372                           
   373  012F  292F               	goto	l71
   374  0130                     __end_of_main:	
   375                           
   376                           	psect	text1
   377  0106                     __ptext1:	
   378 ;; *************** function _init *****************
   379 ;; Defined at:
   380 ;;		line 97 in file "main.c"
   381 ;; Parameters:    Size  Location     Type
   382 ;;		None
   383 ;; Auto vars:     Size  Location     Type
   384 ;;		None
   385 ;; Return value:  Size  Location     Type
   386 ;;		None               void
   387 ;; Registers used:
   388 ;;		wreg, status,2, status,0, pclath, cstack
   389 ;; Tracked objects:
   390 ;;		On entry : 0/0
   391 ;;		On exit  : 0/0
   392 ;;		Unchanged: 0/0
   393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   394 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   395 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   397 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   398 ;;Total ram usage:        0 bytes
   399 ;; Hardware stack levels used:    1
   400 ;; Hardware stack levels required when called:    4
   401 ;; This function calls:
   402 ;;		_init_rf
   403 ;;		_init_serial
   404 ;; This function is called by:
   405 ;;		_main
   406 ;; This function uses a non-reentrant model
   407 ;;
   408                           
   409                           
   410                           ;psect for function _init
   411  0106                     _init:	
   412                           
   413                           ;main.c: 98: TRISCbits.TRISC2 = 0;
   414                           
   415                           ;incstack = 0
   416                           ; Regs used in _init: [wreg+status,2+status,0+pclath+cstack]
   417  0106  0021               	movlb	1	; select bank1
   418  0107  110E               	bcf	14,2	;volatile
   419                           
   420                           ;main.c: 99: RC2 = 0;
   421  0108  0020               	movlb	0	; select bank0
   422  0109  110E               	bcf	14,2	;volatile
   423                           
   424                           ;main.c: 101: init_rf();
   425  010A  3181  2120  3181   	fcall	_init_rf
   426                           
   427                           ;main.c: 102: init_serial();
   428  010D  3181  2114         	fcall	_init_serial
   429                           
   430                           ;main.c: 103: PEIE = 1;
   431  010F  170B               	bsf	11,6	;volatile
   432                           
   433                           ;main.c: 104: RCIE = 1;
   434  0110  0021               	movlb	1	; select bank1
   435  0111  1691               	bsf	17,5	;volatile
   436                           
   437                           ;main.c: 105: GIE = 1;
   438  0112  178B               	bsf	11,7	;volatile
   439  0113  0008               	return
   440  0114                     __end_of_init:	
   441                           
   442                           	psect	text2
   443  0114                     __ptext2:	
   444 ;; *************** function _init_serial *****************
   445 ;; Defined at:
   446 ;;		line 151 in file "main.c"
   447 ;; Parameters:    Size  Location     Type
   448 ;;		None
   449 ;; Auto vars:     Size  Location     Type
   450 ;;		None
   451 ;; Return value:  Size  Location     Type
   452 ;;		None               void
   453 ;; Registers used:
   454 ;;		wreg, status,2
   455 ;; Tracked objects:
   456 ;;		On entry : 0/0
   457 ;;		On exit  : 0/0
   458 ;;		Unchanged: 0/0
   459 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   460 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   461 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   462 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   463 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   464 ;;Total ram usage:        0 bytes
   465 ;; Hardware stack levels used:    1
   466 ;; Hardware stack levels required when called:    3
   467 ;; This function calls:
   468 ;;		Nothing
   469 ;; This function is called by:
   470 ;;		_init
   471 ;; This function uses a non-reentrant model
   472 ;;
   473                           
   474                           
   475                           ;psect for function _init_serial
   476  0114                     _init_serial:	
   477                           
   478                           ;main.c: 152: SPEN = 1;
   479                           
   480                           ;incstack = 0
   481                           ; Regs used in _init_serial: [wreg+status,2]
   482  0114  0023               	movlb	3	; select bank3
   483  0115  179D               	bsf	29,7	;volatile
   484                           
   485                           ;main.c: 153: SYNC = 0;
   486  0116  121E               	bcf	30,4	;volatile
   487                           
   488                           ;main.c: 154: BRG16 = 0;
   489  0117  119F               	bcf	31,3	;volatile
   490                           
   491                           ;main.c: 155: BRGH = 1;
   492  0118  151E               	bsf	30,2	;volatile
   493                           
   494                           ;main.c: 156: SPBRGH = 0x00;
   495  0119  019C               	clrf	28	;volatile
   496                           
   497                           ;main.c: 157: SPBRGL = 51;
   498  011A  3033               	movlw	51
   499  011B  009B               	movwf	27	;volatile
   500                           
   501                           ;main.c: 158: CREN = 1;
   502  011C  161D               	bsf	29,4	;volatile
   503                           
   504                           ;main.c: 159: SREN = 1;
   505  011D  169D               	bsf	29,5	;volatile
   506                           
   507                           ;main.c: 160: TXEN = 1;
   508  011E  169E               	bsf	30,5	;volatile
   509  011F  0008               	return
   510  0120                     __end_of_init_serial:	
   511                           
   512                           	psect	text3
   513  0120                     __ptext3:	
   514 ;; *************** function _init_rf *****************
   515 ;; Defined at:
   516 ;;		line 109 in file "main.c"
   517 ;; Parameters:    Size  Location     Type
   518 ;;		None
   519 ;; Auto vars:     Size  Location     Type
   520 ;;		None
   521 ;; Return value:  Size  Location     Type
   522 ;;		None               void
   523 ;; Registers used:
   524 ;;		wreg
   525 ;; Tracked objects:
   526 ;;		On entry : 0/0
   527 ;;		On exit  : 0/0
   528 ;;		Unchanged: 0/0
   529 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   530 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   531 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   533 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   534 ;;Total ram usage:        0 bytes
   535 ;; Hardware stack levels used:    1
   536 ;; Hardware stack levels required when called:    3
   537 ;; This function calls:
   538 ;;		Nothing
   539 ;; This function is called by:
   540 ;;		_init
   541 ;; This function uses a non-reentrant model
   542 ;;
   543                           
   544                           
   545                           ;psect for function _init_rf
   546  0120                     _init_rf:	
   547                           
   548                           ;main.c: 110: T0CS = 0;
   549                           
   550                           ;incstack = 0
   551                           ; Regs used in _init_rf: [wreg]
   552  0120  0021               	movlb	1	; select bank1
   553  0121  1295               	bcf	21,5	;volatile
   554                           
   555                           ;main.c: 111: T0SE = 1;
   556  0122  1615               	bsf	21,4	;volatile
   557                           
   558                           ;main.c: 112: PSA = 0;
   559  0123  1195               	bcf	21,3	;volatile
   560                           
   561                           ;main.c: 113: PS2 = 0;
   562  0124  1115               	bcf	21,2	;volatile
   563                           
   564                           ;main.c: 114: PS1 = 0;
   565  0125  1095               	bcf	21,1	;volatile
   566                           
   567                           ;main.c: 115: PS0 = 1;
   568  0126  1415               	bsf	21,0	;volatile
   569                           
   570                           ;main.c: 116: TMR0 = 6;
   571  0127  3006               	movlw	6
   572  0128  0020               	movlb	0	; select bank0
   573  0129  0095               	movwf	21	;volatile
   574                           
   575                           ;main.c: 117: TMR0IE = 1;
   576  012A  168B               	bsf	11,5	;volatile
   577  012B  0008               	return
   578  012C                     __end_of_init_rf:	
   579                           
   580                           	psect	intentry
   581  0004                     __pintentry:	
   582 ;; *************** function _prekidna_rutina *****************
   583 ;; Defined at:
   584 ;;		line 75 in file "main.c"
   585 ;; Parameters:    Size  Location     Type
   586 ;;		None
   587 ;; Auto vars:     Size  Location     Type
   588 ;;		None
   589 ;; Return value:  Size  Location     Type
   590 ;;		None               void
   591 ;; Registers used:
   592 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   593 ;; Tracked objects:
   594 ;;		On entry : 0/0
   595 ;;		On exit  : 0/0
   596 ;;		Unchanged: 0/0
   597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   600 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   601 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   602 ;;Total ram usage:        2 bytes
   603 ;; Hardware stack levels used:    1
   604 ;; Hardware stack levels required when called:    2
   605 ;; This function calls:
   606 ;;		_rf_send
   607 ;; This function is called by:
   608 ;;		Interrupt level 1
   609 ;; This function uses a non-reentrant model
   610 ;;
   611                           
   612  0004                     _prekidna_rutina:	
   613                           
   614                           ;incstack = 0
   615                           ; Regs used in _prekidna_rutina: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
   616  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
   617  0005  3180               	pagesel	$
   618  0006  0020               	movlb	0	; select bank0
   619  0007  087F               	movf	127,w
   620  0008  00FB               	movwf	??_prekidna_rutina+1
   621                           
   622                           ;main.c: 76: if(TMR0IE && TMR0IF){
   623  0009  1A8B               	btfsc	11,5	;volatile
   624  000A  1D0B               	btfss	11,2	;volatile
   625  000B  2818               	goto	i1l77
   626                           
   627                           ;main.c: 77: TMR0 = 6;
   628  000C  3006               	movlw	6
   629  000D  0095               	movwf	21	;volatile
   630                           
   631                           ;main.c: 78: TMR0IF = 0;
   632  000E  110B               	bcf	11,2	;volatile
   633                           
   634                           ;main.c: 79: if(send == 1)
   635  000F  0323               	decf	_send,w
   636  0010  1D03               	btfss	3,2
   637  0011  2816               	goto	i1l837
   638                           
   639                           ;main.c: 80: rf_send();
   640  0012  3180  204A  3180   	fcall	_rf_send
   641  0015  2839               	goto	i1l86
   642  0016                     i1l837:	
   643                           
   644                           ;main.c: 81: else t = 0;
   645  0016  01FD               	clrf	_t
   646                           
   647                           ;main.c: 82: } else if (RCIE && RCIF) {
   648  0017  2839               	goto	i1l86
   649  0018                     i1l77:	
   650  0018  0021               	movlb	1	; select bank1
   651  0019  1E91               	btfss	17,5	;volatile
   652  001A  2839               	goto	i1l86
   653  001B  0020               	movlb	0	; select bank0
   654  001C  1E91               	btfss	17,5	;volatile
   655  001D  2839               	goto	i1l86
   656                           
   657                           ;main.c: 83: pcData = RCREG;
   658  001E  0023               	movlb	3	; select bank3
   659  001F  0819               	movf	25,w	;volatile
   660  0020  00FA               	movwf	??_prekidna_rutina
   661  0021  087A               	movf	??_prekidna_rutina,w
   662  0022  00FC               	movwf	_pcData
   663                           
   664                           ;main.c: 84: if(pcData == '*' || pcData == '#') {
   665  0023  302A               	movlw	42
   666  0024  067C               	xorwf	_pcData,w
   667  0025  1903               	btfsc	3,2
   668  0026  282B               	goto	i1l847
   669  0027  3023               	movlw	35
   670  0028  067C               	xorwf	_pcData,w
   671  0029  1D03               	btfss	3,2
   672  002A  2832               	goto	i1l851
   673  002B                     i1l847:	
   674                           
   675                           ;main.c: 85: rf_data[0] = pcData;
   676  002B  087C               	movf	_pcData,w
   677  002C  00FA               	movwf	??_prekidna_rutina
   678  002D  087A               	movf	??_prekidna_rutina,w
   679  002E  0020               	movlb	0	; select bank0
   680  002F  00A0               	movwf	_rf_data
   681                           
   682                           ;main.c: 86: send = 0;
   683  0030  01A3               	clrf	_send
   684                           
   685                           ;main.c: 87: }
   686  0031  2839               	goto	i1l86
   687  0032                     i1l851:	
   688                           
   689                           ;main.c: 88: else {
   690                           ;main.c: 89: rf_data[1] = pcData;
   691  0032  087C               	movf	_pcData,w
   692  0033  00FA               	movwf	??_prekidna_rutina
   693  0034  087A               	movf	??_prekidna_rutina,w
   694  0035  0020               	movlb	0	; select bank0
   695  0036  00A1               	movwf	_rf_data+1
   696                           
   697                           ;main.c: 90: send = 1;
   698  0037  01A3               	clrf	_send
   699  0038  0AA3               	incf	_send,f
   700  0039                     i1l86:	
   701  0039  087B               	movf	??_prekidna_rutina+1,w
   702  003A  0020               	movlb	0	; select bank0
   703  003B  00FF               	movwf	127
   704  003C  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
   705  003D  0009               	retfie
   706  003E                     __end_of_prekidna_rutina:	
   707                           
   708                           	psect	text5
   709  004A                     __ptext5:	
   710 ;; *************** function _rf_send *****************
   711 ;; Defined at:
   712 ;;		line 121 in file "main.c"
   713 ;; Parameters:    Size  Location     Type
   714 ;;		None
   715 ;; Auto vars:     Size  Location     Type
   716 ;;		None
   717 ;; Return value:  Size  Location     Type
   718 ;;		None               void
   719 ;; Registers used:
   720 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   721 ;; Tracked objects:
   722 ;;		On entry : 0/0
   723 ;;		On exit  : 0/0
   724 ;;		Unchanged: 0/0
   725 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   726 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   727 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   728 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   729 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   730 ;;Total ram usage:        1 bytes
   731 ;; Hardware stack levels used:    1
   732 ;; Hardware stack levels required when called:    1
   733 ;; This function calls:
   734 ;;		___awdiv
   735 ;; This function is called by:
   736 ;;		_prekidna_rutina
   737 ;; This function uses a non-reentrant model
   738 ;;
   739                           
   740                           
   741                           ;psect for function _rf_send
   742  004A                     _rf_send:	
   743                           
   744                           ;main.c: 123: if (t == 0) RC2 = 1;
   745                           
   746                           ;incstack = 0
   747                           ; Regs used in _rf_send: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
   748  004A  087D               	movf	_t,w
   749  004B  1903               	btfsc	3,2
   750  004C  28A1               	goto	i1l107
   751                           
   752                           ;main.c: 124: else if (t < 10) RC2 = !RC2;
   753  004D  300A               	movlw	10
   754  004E  027D               	subwf	_t,w
   755  004F  1803               	skipnc
   756  0050  2855               	goto	i1l795
   757  0051  3004               	movlw	4
   758  0052  0020               	movlb	0	; select bank0
   759  0053  068E               	xorwf	14,f
   760  0054  28A3               	goto	i1l811
   761  0055                     i1l795:	
   762                           
   763                           ;main.c: 125: else if (t < 16) RC2 = 1;
   764  0055  3010               	movlw	16
   765  0056  027D               	subwf	_t,w
   766  0057  1C03               	btfss	3,0
   767  0058  28A1               	goto	i1l107
   768                           
   769                           ;main.c: 126: else if (t < 17) RC2 = 0;
   770  0059  3011               	movlw	17
   771  005A  027D               	subwf	_t,w
   772  005B  1C03               	btfss	3,0
   773  005C  289E               	goto	i1l809
   774                           
   775                           ;main.c: 127: else {
   776                           ;main.c: 128: if (t%2 == 1){
   777  005D  1C7D               	btfss	_t,0
   778  005E  287F               	goto	i1l807
   779                           
   780                           ;main.c: 130: if (((rf_data[byteNo]) & (1 << ((t - 17)/2)))) RC2 = 1;
   781  005F  0020               	movlb	0	; select bank0
   782  0060  0822               	movf	_byteNo,w
   783  0061  3E20               	addlw	(low (_rf_data| 0))& (0+255)
   784  0062  0086               	movwf	6
   785  0063  0187               	clrf	7
   786  0064  3001               	movlw	1
   787  0065  00F9               	movwf	??_rf_send
   788  0066  3002               	movlw	2
   789  0067  00F0               	movwf	___awdiv@divisor
   790  0068  3000               	movlw	0
   791  0069  00F1               	movwf	___awdiv@divisor+1
   792  006A  087D               	movf	_t,w
   793  006B  3EEF               	addlw	239
   794  006C  00F2               	movwf	___awdiv@dividend
   795  006D  30FF               	movlw	255
   796  006E  1803               	skipnc
   797  006F  3000               	movlw	0
   798  0070  00F3               	movwf	___awdiv@dividend+1
   799  0071  3180  20B5  3180   	fcall	___awdiv
   800  0074  0870               	movf	?___awdiv,w
   801  0075  0A89               	incf	9,f
   802  0076  2878               	goto	u44_24
   803  0077                     u44_25:	
   804  0077  35F9               	lslf	??_rf_send,f
   805  0078                     u44_24:	
   806  0078  0B89               	decfsz	9,f
   807  0079  2877               	goto	u44_25
   808  007A  0879               	movf	??_rf_send,w
   809  007B  0501               	andwf	1,w
   810  007C  1903               	btfsc	3,2
   811  007D  289E               	goto	i1l809
   812  007E  28A1               	goto	i1l107
   813  007F                     i1l807:	
   814                           ;main.c: 132: } else {
   815                           
   816                           ;main.c: 131: else RC2 = 0;
   817                           
   818                           
   819                           ;main.c: 134: if (((rf_data[byteNo]) & (1 << ((t - 17)/2)))) RC2 = 0;
   820  007F  0020               	movlb	0	; select bank0
   821  0080  0822               	movf	_byteNo,w
   822  0081  3E20               	addlw	(low (_rf_data| 0))& (0+255)
   823  0082  0086               	movwf	6
   824  0083  0187               	clrf	7
   825  0084  3001               	movlw	1
   826  0085  00F9               	movwf	??_rf_send
   827  0086  3002               	movlw	2
   828  0087  00F0               	movwf	___awdiv@divisor
   829  0088  3000               	movlw	0
   830  0089  00F1               	movwf	___awdiv@divisor+1
   831  008A  087D               	movf	_t,w
   832  008B  3EEF               	addlw	239
   833  008C  00F2               	movwf	___awdiv@dividend
   834  008D  30FF               	movlw	255
   835  008E  1803               	skipnc
   836  008F  3000               	movlw	0
   837  0090  00F3               	movwf	___awdiv@dividend+1
   838  0091  3180  20B5  3180   	fcall	___awdiv
   839  0094  0870               	movf	?___awdiv,w
   840  0095  0A89               	incf	9,f
   841  0096  2898               	goto	u46_24
   842  0097                     u46_25:	
   843  0097  35F9               	lslf	??_rf_send,f
   844  0098                     u46_24:	
   845  0098  0B89               	decfsz	9,f
   846  0099  2897               	goto	u46_25
   847  009A  0879               	movf	??_rf_send,w
   848  009B  0501               	andwf	1,w
   849  009C  1903               	btfsc	3,2
   850  009D  28A1               	goto	i1l107
   851  009E                     i1l809:	
   852  009E  0020               	movlb	0	; select bank0
   853  009F  110E               	bcf	14,2	;volatile
   854  00A0  28A3               	goto	i1l811
   855  00A1                     i1l107:	
   856                           
   857                           ;main.c: 135: else RC2 = 1;
   858  00A1  0020               	movlb	0	; select bank0
   859  00A2  150E               	bsf	14,2	;volatile
   860  00A3                     i1l811:	
   861                           
   862                           ;main.c: 136: }
   863                           ;main.c: 137: }
   864                           ;main.c: 138: t++;
   865  00A3  3001               	movlw	1
   866  00A4  00F9               	movwf	??_rf_send
   867  00A5  0879               	movf	??_rf_send,w
   868  00A6  07FD               	addwf	_t,f
   869                           
   870                           ;main.c: 140: if (t == 34){
   871  00A7  3022               	movlw	34
   872  00A8  067D               	xorwf	_t,w
   873  00A9  1D03               	btfss	3,2
   874  00AA  0008               	return
   875                           
   876                           ;main.c: 141: RC2 = 0;
   877  00AB  110E               	bcf	14,2	;volatile
   878                           
   879                           ;main.c: 142: t = 0;
   880  00AC  01FD               	clrf	_t
   881                           
   882                           ;main.c: 143: if(byteNo == 0)
   883  00AD  0822               	movf	_byteNo,w
   884  00AE  1D03               	btfss	3,2
   885  00AF  28B3               	goto	i1l821
   886                           
   887                           ;main.c: 144: byteNo = 1;
   888  00B0  01A2               	clrf	_byteNo
   889  00B1  0AA2               	incf	_byteNo,f
   890  00B2  0008               	return
   891  00B3                     i1l821:	
   892                           
   893                           ;main.c: 145: else
   894                           ;main.c: 146: byteNo = 0;
   895  00B3  01A2               	clrf	_byteNo
   896  00B4  0008               	return
   897  00B5                     __end_of_rf_send:	
   898                           
   899                           	psect	text6
   900  00B5                     __ptext6:	
   901 ;; *************** function ___awdiv *****************
   902 ;; Defined at:
   903 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
   904 ;; Parameters:    Size  Location     Type
   905 ;;  divisor         2    0[COMMON] int 
   906 ;;  dividend        2    2[COMMON] int 
   907 ;; Auto vars:     Size  Location     Type
   908 ;;  quotient        2    7[COMMON] int 
   909 ;;  sign            1    6[COMMON] unsigned char 
   910 ;;  counter         1    5[COMMON] unsigned char 
   911 ;; Return value:  Size  Location     Type
   912 ;;                  2    0[COMMON] int 
   913 ;; Registers used:
   914 ;;		wreg, status,2, status,0
   915 ;; Tracked objects:
   916 ;;		On entry : 0/0
   917 ;;		On exit  : 0/0
   918 ;;		Unchanged: 0/0
   919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   920 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   921 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   922 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   923 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   924 ;;Total ram usage:        9 bytes
   925 ;; Hardware stack levels used:    1
   926 ;; This function calls:
   927 ;;		Nothing
   928 ;; This function is called by:
   929 ;;		_rf_send
   930 ;; This function uses a non-reentrant model
   931 ;;
   932                           
   933                           
   934                           ;psect for function ___awdiv
   935  00B5                     ___awdiv:	
   936                           
   937                           ;incstack = 0
   938                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
   939  00B5  01F6               	clrf	___awdiv@sign
   940  00B6  1FF1               	btfss	___awdiv@divisor+1,7
   941  00B7  28BF               	goto	i1l741
   942  00B8  09F0               	comf	___awdiv@divisor,f
   943  00B9  09F1               	comf	___awdiv@divisor+1,f
   944  00BA  0AF0               	incf	___awdiv@divisor,f
   945  00BB  1903               	skipnz
   946  00BC  0AF1               	incf	___awdiv@divisor+1,f
   947  00BD  01F6               	clrf	___awdiv@sign
   948  00BE  0AF6               	incf	___awdiv@sign,f
   949  00BF                     i1l741:	
   950  00BF  1FF3               	btfss	___awdiv@dividend+1,7
   951  00C0  28CA               	goto	i1l747
   952  00C1  09F2               	comf	___awdiv@dividend,f
   953  00C2  09F3               	comf	___awdiv@dividend+1,f
   954  00C3  0AF2               	incf	___awdiv@dividend,f
   955  00C4  1903               	skipnz
   956  00C5  0AF3               	incf	___awdiv@dividend+1,f
   957  00C6  3001               	movlw	1
   958  00C7  00F4               	movwf	??___awdiv
   959  00C8  0874               	movf	??___awdiv,w
   960  00C9  06F6               	xorwf	___awdiv@sign,f
   961  00CA                     i1l747:	
   962  00CA  01F7               	clrf	___awdiv@quotient
   963  00CB  01F8               	clrf	___awdiv@quotient+1
   964  00CC  0870               	movf	___awdiv@divisor,w
   965  00CD  0471               	iorwf	___awdiv@divisor+1,w
   966  00CE  1903               	btfsc	3,2
   967  00CF  28F9               	goto	i1l769
   968  00D0  01F5               	clrf	___awdiv@counter
   969  00D1  0AF5               	incf	___awdiv@counter,f
   970  00D2                     i1l757:	
   971  00D2  1BF1               	btfsc	___awdiv@divisor+1,7
   972  00D3  28DE               	goto	i1l759
   973  00D4  3001               	movlw	1
   974  00D5                     u32_25:	
   975  00D5  35F0               	lslf	___awdiv@divisor,f
   976  00D6  0DF1               	rlf	___awdiv@divisor+1,f
   977  00D7  0B89               	decfsz	9,f
   978  00D8  28D5               	goto	u32_25
   979  00D9  3001               	movlw	1
   980  00DA  00F4               	movwf	??___awdiv
   981  00DB  0874               	movf	??___awdiv,w
   982  00DC  07F5               	addwf	___awdiv@counter,f
   983  00DD  28D2               	goto	i1l757
   984  00DE                     i1l759:	
   985  00DE  3001               	movlw	1
   986  00DF                     u34_25:	
   987  00DF  35F7               	lslf	___awdiv@quotient,f
   988  00E0  0DF8               	rlf	___awdiv@quotient+1,f
   989  00E1  0B89               	decfsz	9,f
   990  00E2  28DF               	goto	u34_25
   991  00E3  0871               	movf	___awdiv@divisor+1,w
   992  00E4  0273               	subwf	___awdiv@dividend+1,w
   993  00E5  1D03               	skipz
   994  00E6  28E9               	goto	u35_25
   995  00E7  0870               	movf	___awdiv@divisor,w
   996  00E8  0272               	subwf	___awdiv@dividend,w
   997  00E9                     u35_25:	
   998  00E9  1C03               	skipc
   999  00EA  28F0               	goto	i1l765
  1000  00EB  0870               	movf	___awdiv@divisor,w
  1001  00EC  02F2               	subwf	___awdiv@dividend,f
  1002  00ED  0871               	movf	___awdiv@divisor+1,w
  1003  00EE  3BF3               	subwfb	___awdiv@dividend+1,f
  1004  00EF  1477               	bsf	___awdiv@quotient,0
  1005  00F0                     i1l765:	
  1006  00F0  3001               	movlw	1
  1007  00F1                     u36_25:	
  1008  00F1  36F1               	lsrf	___awdiv@divisor+1,f
  1009  00F2  0CF0               	rrf	___awdiv@divisor,f
  1010  00F3  0B89               	decfsz	9,f
  1011  00F4  28F1               	goto	u36_25
  1012  00F5  3001               	movlw	1
  1013  00F6  02F5               	subwf	___awdiv@counter,f
  1014  00F7  1D03               	btfss	3,2
  1015  00F8  28DE               	goto	i1l759
  1016  00F9                     i1l769:	
  1017  00F9  0876               	movf	___awdiv@sign,w
  1018  00FA  1903               	btfsc	3,2
  1019  00FB  2901               	goto	i1l773
  1020  00FC  09F7               	comf	___awdiv@quotient,f
  1021  00FD  09F8               	comf	___awdiv@quotient+1,f
  1022  00FE  0AF7               	incf	___awdiv@quotient,f
  1023  00FF  1903               	skipnz
  1024  0100  0AF8               	incf	___awdiv@quotient+1,f
  1025  0101                     i1l773:	
  1026  0101  0878               	movf	___awdiv@quotient+1,w
  1027  0102  00F1               	movwf	?___awdiv+1
  1028  0103  0877               	movf	___awdiv@quotient,w
  1029  0104  00F0               	movwf	?___awdiv
  1030  0105  0008               	return
  1031  0106                     __end_of___awdiv:	
  1032  007E                     btemp	set	126	;btemp
  1033  007E                     int$flags	set	126
  1034  007E                     wtemp	set	126
  1035  007E                     wtemp0	set	126
  1036  0080                     wtemp1	set	128
  1037  0082                     wtemp2	set	130
  1038  0084                     wtemp3	set	132
  1039  0086                     wtemp4	set	134
  1040  0088                     wtemp5	set	136
  1041  007F                     wtemp6	set	127
  1042  007E                     ttemp	set	126
  1043  007E                     ttemp0	set	126
  1044  0081                     ttemp1	set	129
  1045  0084                     ttemp2	set	132
  1046  0087                     ttemp3	set	135
  1047  007F                     ttemp4	set	127
  1048  007E                     ltemp	set	126
  1049  007E                     ltemp0	set	126
  1050  0082                     ltemp1	set	130
  1051  0086                     ltemp2	set	134
  1052  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      14
    BANK0            80      0       4
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _prekidna_rutina in COMMON

    _prekidna_rutina->_rf_send
    _rf_send->___awdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _prekidna_rutina in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _prekidna_rutina in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _prekidna_rutina in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _prekidna_rutina in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _prekidna_rutina in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _prekidna_rutina in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _prekidna_rutina in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _prekidna_rutina in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _prekidna_rutina in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _prekidna_rutina in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _prekidna_rutina in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _prekidna_rutina in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _prekidna_rutina in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                               _init
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
                            _init_rf
                        _init_serial
 ---------------------------------------------------------------------------------
 (2) _init_serial                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_rf                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _prekidna_rutina                                      2     2      0     512
                                             10 COMMON     2     2      0
                            _rf_send
 ---------------------------------------------------------------------------------
 (4) _rf_send                                              1     1      0     512
                                              9 COMMON     1     1      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              9     5      4     512
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init
     _init_rf
     _init_serial

 _prekidna_rutina (ROOT)
   _rf_send
     ___awdiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       4       5        5.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      12      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      12      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Thu Jun 30 13:04:45 2016

                       _t 007D               __CFG_CP$OFF 0000                        l71 012F  
            ___awdiv@sign 0076                       _GIE 005F                       _RC2 0072  
                     _PS0 04A8                       _PS1 04A9                       _PS2 04AA  
            __CFG_CPD$OFF 0000                       _PSA 04AB              __CFG_BORV$LO 0000  
                     wreg 0009              __CFG_FOSC$HS 0000              __CFG_LVP$OFF 0000  
                    _BRGH 0CF2                      _CREN 0CEC                      _T0CS 04AD  
                    _T0SE 04AC                      _PEIE 005E                      _RCIE 048D  
                    _RCIF 008D                      i1l77 0018                      i1l86 0039  
                    _TMR0 0015                      _SPEN 0CEF                      _SREN 0CED  
                    _TXEN 0CF5                      _SYNC 0CF4              __CFG_WRT$OFF 0000  
                    _main 012C                      _init 0106                      _send 0023  
                    fsr1h 0007                      indf1 0001                      fsr1l 0006  
                    btemp 007E                      ltemp 007E                      start 003E  
                    ttemp 007E                      wtemp 007E             __CFG_IESO$OFF 0000  
           __CFG_MCLRE$ON 0000                     ?_main 0070                     ?_init 0070  
         __end_of___awdiv 0106                     _BRG16 0CFB             __CFG_WDTE$OFF 0000  
         ___awdiv@divisor 0070                     i1l107 00A1                     i1l811 00A3  
                   i1l741 00BF                     i1l821 00B3                     i1l807 007F  
                   i1l809 009E                     i1l747 00CA                     i1l851 0032  
                   i1l773 0101                     i1l765 00F0                     i1l757 00D2  
                   i1l837 0016                     i1l759 00DE                     i1l847 002B  
                   i1l769 00F9                     i1l795 0055           ___awdiv@counter 0075  
                   _RCREG 0199                     u32_25 00D5                     u34_25 00DF  
                   u35_25 00E9                     u44_24 0078                     u36_25 00F1  
                   u44_25 0077                     u46_24 0098                     u46_25 0097  
            ?_init_serial 0070            __CFG_FCMEN$OFF 0000           __end_of_init_rf 012C  
         __end_of_rf_send 00B5            __CFG_BOREN$OFF 0000                     ltemp0 007E  
                   ltemp1 0082                     ltemp2 0086                     ltemp3 0080  
                   ttemp0 007E                     ttemp1 0081                     ttemp2 0084  
                   ttemp3 0087                     ttemp4 007F                     status 0003  
                   wtemp0 007E                     wtemp1 0080                     wtemp2 0082  
                   wtemp3 0084                     wtemp4 0086                     wtemp5 0088  
                   wtemp6 007F           __initialization 0040              __end_of_main 0130  
            __end_of_init 0114                    ??_main 0000                    ??_init 0000  
          __CFG_PLLEN$OFF 0000          ___awdiv@dividend 0072                    _TMR0IE 005D  
                  _TMR0IF 005A                    _SPBRGH 019C                    _SPBRGL 019B  
          __CFG_PWRTE$OFF 0000                 ??___awdiv 0074                    _pcData 007C  
         _prekidna_rutina 0004                    _byteNo 0022          ___awdiv@quotient 0077  
               ??_init_rf 0000                 ??_rf_send 0079   __end_of__initialization 0046  
          __pcstackCOMMON 0070      __size_of_init_serial 000C                __pbssBANK0 0020  
         __CFG_VCAPEN$OFF 0000   __end_of_prekidna_rutina 003E                __pmaintext 012C  
              __pintentry 0004                   ___awdiv 00B5           __CFG_STVREN$OFF 0000  
                 __ptext1 0106                   __ptext2 0114                   __ptext3 0120  
                 __ptext5 004A                   __ptext6 00B5                   _init_rf 0120  
                 _rf_data 0020                   _rf_send 004A      end_of_initialization 0046  
        ?_prekidna_rutina 0070                 _TRISCbits 008E       start_initialization 0040  
           ??_init_serial 0000               __pbssCOMMON 007C                 ___latbits 0003  
           __pcstackBANK0 0000                  ?___awdiv 0070                  ?_init_rf 0070  
                ?_rf_send 0070       __end_of_init_serial 0120          __size_of___awdiv 0051  
__size_of_prekidna_rutina 003A               _init_serial 0114          __size_of_init_rf 000C  
        __size_of_rf_send 006B             __size_of_main 0004             __size_of_init 000E  
                int$flags 007E                  intlevel1 0000         __CFG_CLKOUTEN$OFF 0000  
       ??_prekidna_rutina 007A  
