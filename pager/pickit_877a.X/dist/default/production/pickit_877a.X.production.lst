

Microchip Technology PIC LITE Macro Assembler V1.35 build -356382666 
                                                                                               Mon Feb 22 20:29:05 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	psect	text3,local,class=CODE,merge=1,delta=2
    10                           	psect	intentry,global,class=CODE,delta=2
    11                           	dabs	1,0x7E,2
    12  0000                     	;# 
    13  0001                     	;# 
    14  0002                     	;# 
    15  0003                     	;# 
    16  0004                     	;# 
    17  0005                     	;# 
    18  0006                     	;# 
    19  0007                     	;# 
    20  0008                     	;# 
    21  0009                     	;# 
    22  000A                     	;# 
    23  000B                     	;# 
    24  000C                     	;# 
    25  000D                     	;# 
    26  000E                     	;# 
    27  000E                     	;# 
    28  000F                     	;# 
    29  0010                     	;# 
    30  0011                     	;# 
    31  0012                     	;# 
    32  0013                     	;# 
    33  0014                     	;# 
    34  0015                     	;# 
    35  0015                     	;# 
    36  0016                     	;# 
    37  0017                     	;# 
    38  0018                     	;# 
    39  0019                     	;# 
    40  001A                     	;# 
    41  001B                     	;# 
    42  001B                     	;# 
    43  001C                     	;# 
    44  001D                     	;# 
    45  001E                     	;# 
    46  001F                     	;# 
    47  0081                     	;# 
    48  0085                     	;# 
    49  0086                     	;# 
    50  0087                     	;# 
    51  0088                     	;# 
    52  0089                     	;# 
    53  008C                     	;# 
    54  008D                     	;# 
    55  008E                     	;# 
    56  0091                     	;# 
    57  0092                     	;# 
    58  0093                     	;# 
    59  0094                     	;# 
    60  0098                     	;# 
    61  0099                     	;# 
    62  009C                     	;# 
    63  009D                     	;# 
    64  009E                     	;# 
    65  009F                     	;# 
    66  010C                     	;# 
    67  010D                     	;# 
    68  010E                     	;# 
    69  010F                     	;# 
    70  018C                     	;# 
    71  018D                     	;# 
    72  0001                     _TMR0	set	1
    73  005F                     _GIE	set	95
    74  002D                     _RA5	set	45
    75  003A                     _RC2	set	58
    76  0040                     _RD0	set	64
    77  0041                     _RD1	set	65
    78  0042                     _RD2	set	66
    79  0043                     _RD3	set	67
    80  0044                     _RD4	set	68
    81  0045                     _RD5	set	69
    82  0046                     _RD6	set	70
    83  005D                     _TMR0IE	set	93
    84  005A                     _TMR0IF	set	90
    85  0088                     _TRISD	set	136
    86  0408                     _PS0	set	1032
    87  0409                     _PS1	set	1033
    88  040A                     _PS2	set	1034
    89  040B                     _PSA	set	1035
    90  040D                     _T0CS	set	1037
    91                           
    92                           ; #config settings
    93  0000                     
    94                           	psect	cinit
    95  0015                     start_initialization:	
    96  0015                     __initialization:	
    97  0015                     end_of_initialization:	
    98                           ;End of C runtime variable initialization code
    99                           
   100  0015                     __end_of__initialization:	
   101  0015  0183               	clrf	3
   102  0016  120A  118A  283D   	ljmp	_main	;jump to C main() function
   103                           
   104                           	psect	cstackCOMMON
   105  0070                     __pcstackCOMMON:	
   106  0070                     ?_init_regs:	
   107  0070                     ?_main:	
   108                           ; 0 bytes @ 0x0
   109                           
   110  0070                     ?_prekidna_rutina:	
   111                           ; 0 bytes @ 0x0
   112                           
   113  0070                     ??_prekidna_rutina:	
   114                           ; 0 bytes @ 0x0
   115                           
   116  0070                     ?_init_rf:	
   117                           ; 0 bytes @ 0x0
   118                           
   119                           
   120                           ; 0 bytes @ 0x0
   121  0070                     	ds	4
   122  0074                     ??_init_regs:	
   123  0074                     ??_main:	
   124                           ; 0 bytes @ 0x4
   125                           
   126  0074                     ??_init_rf:	
   127                           ; 0 bytes @ 0x4
   128                           
   129                           
   130                           	psect	maintext
   131  003D                     __pmaintext:	
   132                           ; 0 bytes @ 0x4
   133 ;;
   134 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   135 ;;
   136 ;; *************** function _main *****************
   137 ;; Defined at:
   138 ;;		line 36 in file "main.c"
   139 ;; Parameters:    Size  Location     Type
   140 ;;		None
   141 ;; Auto vars:     Size  Location     Type
   142 ;;		None
   143 ;; Return value:  Size  Location     Type
   144 ;;		None               void
   145 ;; Registers used:
   146 ;;		status,2, status,0, pclath, cstack
   147 ;; Tracked objects:
   148 ;;		On entry : B00/0
   149 ;;		On exit  : 0/0
   150 ;;		Unchanged: 0/0
   151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   152 ;;      Params:         0       0       0       0       0
   153 ;;      Locals:         0       0       0       0       0
   154 ;;      Temps:          0       0       0       0       0
   155 ;;      Totals:         0       0       0       0       0
   156 ;;Total ram usage:        0 bytes
   157 ;; Hardware stack levels required when called:    3
   158 ;; This function calls:
   159 ;;		_init_regs
   160 ;; This function is called by:
   161 ;;		Startup code after reset
   162 ;; This function uses a non-reentrant model
   163 ;;
   164                           
   165                           
   166                           ;psect for function _main
   167  003D                     _main:	
   168                           
   169                           ;main.c: 37: init_regs();
   170                           
   171                           ;incstack = 0
   172                           ; Regs used in _main: [status,2+status,0+pclath+cstack]
   173  003D  120A  118A  2036  120A  118A  	fcall	_init_regs
   174  0042                     l45:	
   175                           ;main.c: 38: while(1){}
   176                           
   177  0042  2842               	goto	l45
   178  0043                     __end_of_main:	
   179                           
   180                           	psect	text1
   181  0036                     __ptext1:	
   182 ;; *************** function _init_regs *****************
   183 ;; Defined at:
   184 ;;		line 64 in file "main.c"
   185 ;; Parameters:    Size  Location     Type
   186 ;;		None
   187 ;; Auto vars:     Size  Location     Type
   188 ;;		None
   189 ;; Return value:  Size  Location     Type
   190 ;;		None               void
   191 ;; Registers used:
   192 ;;		status,2, status,0, pclath, cstack
   193 ;; Tracked objects:
   194 ;;		On entry : 0/0
   195 ;;		On exit  : 0/0
   196 ;;		Unchanged: 0/0
   197 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   198 ;;      Params:         0       0       0       0       0
   199 ;;      Locals:         0       0       0       0       0
   200 ;;      Temps:          0       0       0       0       0
   201 ;;      Totals:         0       0       0       0       0
   202 ;;Total ram usage:        0 bytes
   203 ;; Hardware stack levels used:    1
   204 ;; Hardware stack levels required when called:    2
   205 ;; This function calls:
   206 ;;		_init_rf
   207 ;; This function is called by:
   208 ;;		_main
   209 ;; This function uses a non-reentrant model
   210 ;;
   211                           
   212                           
   213                           ;psect for function _init_regs
   214  0036                     _init_regs:	
   215                           
   216                           ;main.c: 66: TRISD = 0x00;
   217                           
   218                           ;incstack = 0
   219                           ; Regs used in _init_regs: [status,2+status,0+pclath+cstack]
   220  0036  1683               	bsf	3,5	;RP0=1, select bank1
   221  0037  1303               	bcf	3,6	;RP1=0, select bank1
   222  0038  0188               	clrf	8	;volatile
   223                           
   224                           ;main.c: 67: init_rf();
   225  0039  120A  118A  202C   	fcall	_init_rf
   226  003C  0008               	return
   227  003D                     __end_of_init_regs:	
   228                           
   229                           	psect	text2
   230  002C                     __ptext2:	
   231 ;; *************** function _init_rf *****************
   232 ;; Defined at:
   233 ;;		line 51 in file "main.c"
   234 ;; Parameters:    Size  Location     Type
   235 ;;		None
   236 ;; Auto vars:     Size  Location     Type
   237 ;;		None
   238 ;; Return value:  Size  Location     Type
   239 ;;		None               void
   240 ;; Registers used:
   241 ;;		None
   242 ;; Tracked objects:
   243 ;;		On entry : 0/0
   244 ;;		On exit  : 0/0
   245 ;;		Unchanged: 0/0
   246 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   247 ;;      Params:         0       0       0       0       0
   248 ;;      Locals:         0       0       0       0       0
   249 ;;      Temps:          0       0       0       0       0
   250 ;;      Totals:         0       0       0       0       0
   251 ;;Total ram usage:        0 bytes
   252 ;; Hardware stack levels used:    1
   253 ;; Hardware stack levels required when called:    1
   254 ;; This function calls:
   255 ;;		Nothing
   256 ;; This function is called by:
   257 ;;		_init_regs
   258 ;; This function uses a non-reentrant model
   259 ;;
   260                           
   261                           
   262                           ;psect for function _init_rf
   263  002C                     _init_rf:	
   264                           
   265                           ;main.c: 53: T0CS = 0;
   266                           
   267                           ;incstack = 0
   268                           ; Regs used in _init_rf: []
   269  002C  1683               	bsf	3,5	;RP0=1, select bank1
   270  002D  1303               	bcf	3,6	;RP1=0, select bank1
   271  002E  1281               	bcf	1,5	;volatile
   272                           
   273                           ;main.c: 55: PSA = 0;
   274  002F  1181               	bcf	1,3	;volatile
   275                           
   276                           ;main.c: 56: PS2 = 0;
   277  0030  1101               	bcf	1,2	;volatile
   278                           
   279                           ;main.c: 57: PS1 = 1;
   280  0031  1481               	bsf	1,1	;volatile
   281                           
   282                           ;main.c: 58: PS0 = 0;
   283  0032  1001               	bcf	1,0	;volatile
   284                           
   285                           ;main.c: 60: GIE = 1;
   286  0033  178B               	bsf	11,7	;volatile
   287                           
   288                           ;main.c: 61: TMR0IE = 1;
   289  0034  168B               	bsf	11,5	;volatile
   290  0035  0008               	return
   291  0036                     __end_of_init_rf:	
   292                           
   293                           	psect	text3
   294  0019                     __ptext3:	
   295 ;; *************** function _prekidna_rutina *****************
   296 ;; Defined at:
   297 ;;		line 41 in file "main.c"
   298 ;; Parameters:    Size  Location     Type
   299 ;;		None
   300 ;; Auto vars:     Size  Location     Type
   301 ;;		None
   302 ;; Return value:  Size  Location     Type
   303 ;;		None               void
   304 ;; Registers used:
   305 ;;		wreg
   306 ;; Tracked objects:
   307 ;;		On entry : 0/0
   308 ;;		On exit  : 0/0
   309 ;;		Unchanged: 0/0
   310 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   311 ;;      Params:         0       0       0       0       0
   312 ;;      Locals:         0       0       0       0       0
   313 ;;      Temps:          4       0       0       0       0
   314 ;;      Totals:         4       0       0       0       0
   315 ;;Total ram usage:        4 bytes
   316 ;; Hardware stack levels used:    1
   317 ;; This function calls:
   318 ;;		Nothing
   319 ;; This function is called by:
   320 ;;		Interrupt level 1
   321 ;; This function uses a non-reentrant model
   322 ;;
   323                           
   324                           
   325                           ;psect for function _prekidna_rutina
   326  0019                     _prekidna_rutina:	
   327                           
   328                           ;main.c: 43: if(TMR0IE && TMR0IF)
   329  0019  1A8B               	btfsc	11,5	;volatile
   330  001A  1D0B               	btfss	11,2	;volatile
   331  001B  2821               	goto	i1l52
   332                           
   333                           ;main.c: 44: {
   334                           ;main.c: 45: TMR0IF = 0;
   335  001C  110B               	bcf	11,2	;volatile
   336                           
   337                           ;main.c: 46: TMR0 = 156;
   338  001D  309C               	movlw	156
   339  001E  0081               	movwf	1	;volatile
   340                           
   341                           ;main.c: 47: RD0 = !RD0;
   342  001F  3001               	movlw	1
   343  0020  0688               	xorwf	8,f
   344  0021                     i1l52:	
   345  0021  0873               	movf	??_prekidna_rutina+3,w
   346  0022  00FF               	movwf	127
   347  0023  0872               	movf	??_prekidna_rutina+2,w
   348  0024  008A               	movwf	10
   349  0025  0871               	movf	??_prekidna_rutina+1,w
   350  0026  0084               	movwf	4
   351  0027  0E70               	swapf	??_prekidna_rutina^(0+-128),w
   352  0028  0083               	movwf	3
   353  0029  0EFE               	swapf	126,f
   354  002A  0E7E               	swapf	126,w
   355  002B  0009               	retfie
   356  002C                     __end_of_prekidna_rutina:	
   357  007E                     btemp	set	126	;btemp
   358  007E                     wtemp	set	126
   359  007E                     wtemp0	set	126
   360  0080                     wtemp1	set	128
   361  0082                     wtemp2	set	130
   362  0084                     wtemp3	set	132
   363  0086                     wtemp4	set	134
   364  0088                     wtemp5	set	136
   365  007F                     wtemp6	set	127
   366  007E                     ttemp	set	126
   367  007E                     ttemp0	set	126
   368  0081                     ttemp1	set	129
   369  0084                     ttemp2	set	132
   370  0087                     ttemp3	set	135
   371  007F                     ttemp4	set	127
   372  007E                     ltemp	set	126
   373  007E                     ltemp0	set	126
   374  0082                     ltemp1	set	130
   375  0086                     ltemp2	set	134
   376  0080                     ltemp3	set	128
   377                           
   378                           	psect	intentry
   379  0004                     __pintentry:	
   380                           ;incstack = 0
   381                           ; Regs used in _prekidna_rutina: [wreg]
   382                           
   383  0004                     interrupt_function:	
   384  007E                     saved_w	set	btemp
   385  0004  00FE               	movwf	btemp
   386  0005  0E03               	swapf	3,w
   387  0006  00F0               	movwf	??_prekidna_rutina
   388  0007  0804               	movf	4,w
   389  0008  00F1               	movwf	??_prekidna_rutina+1
   390  0009  080A               	movf	10,w
   391  000A  00F2               	movwf	??_prekidna_rutina+2
   392  000B  1283               	bcf	3,5	;RP0=0, select bank0
   393  000C  1303               	bcf	3,6	;RP1=0, select bank0
   394  000D  087F               	movf	btemp+1,w
   395  000E  00F3               	movwf	??_prekidna_rutina+3
   396  000F  120A  118A  2819   	ljmp	_prekidna_rutina


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4       4
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _prekidna_rutina in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _prekidna_rutina in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _prekidna_rutina in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _prekidna_rutina in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _prekidna_rutina in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                          _init_regs
 ---------------------------------------------------------------------------------
 (1) _init_regs                                            0     0      0       0
                            _init_rf
 ---------------------------------------------------------------------------------
 (2) _init_rf                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _prekidna_rutina                                      4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init_regs
     _init_rf

 _prekidna_rutina (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      4       4       1       28.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Mon Feb 22 20:29:05 2016

             __CFG_CP$OFF 0000                        l45 0042                       _GIE 005F  
                     _RA5 002D                       _RD0 0040                       _RC2 003A  
                     _RD1 0041                       _RD2 0042                       _RD3 0043  
                     _RD4 0044                       _RD5 0045                       _RD6 0046  
                     _PS0 0408                       _PS1 0409                       _PS2 040A  
            __CFG_CPD$OFF 0000                       _PSA 040B                       fsr0 0004  
            __CFG_FOSC$HS 0000              __CFG_LVP$OFF 0000                      _T0CS 040D  
                    i1l52 0021                      _TMR0 0001              __CFG_WRT$OFF 0000  
                    _main 003D                      btemp 007E                      ltemp 007E  
                    start 0012                      ttemp 007E                      wtemp 007E  
                   ?_main 0070             __CFG_WDTE$OFF 0000                     _TRISD 0088  
         __end_of_init_rf 0036            __CFG_BOREN$OFF 0000                     pclath 000A  
                   ltemp0 007E                     ltemp1 0082                     ltemp2 0086  
                   ltemp3 0080                     ttemp0 007E                     ttemp1 0081  
                   ttemp2 0084                     ttemp3 0087                     ttemp4 007F  
                   status 0003                     wtemp0 007E                     wtemp1 0080  
                   wtemp2 0082                     wtemp3 0084                     wtemp4 0086  
                   wtemp5 0088                     wtemp6 007F           __initialization 0015  
            __end_of_main 0043                    ??_main 0074                    _TMR0IE 005D  
                  _TMR0IF 005A            __CFG_PWRTE$OFF 0000           _prekidna_rutina 0019  
               ??_init_rf 0074                    saved_w 007E   __end_of__initialization 0015  
          __pcstackCOMMON 0070   __end_of_prekidna_rutina 002C        __size_of_init_regs 0007  
              __pmaintext 003D                __pintentry 0004                   __ptext1 0036  
                 __ptext2 002C                   __ptext3 0019                   _init_rf 002C  
       __end_of_init_regs 003D      end_of_initialization 0015          ?_prekidna_rutina 0070  
     start_initialization 0015                 ___latbits 0002                  ?_init_rf 0070  
               _init_regs 0036         interrupt_function 0004                ?_init_regs 0070  
__size_of_prekidna_rutina 0013          __size_of_init_rf 000A             __size_of_main 0006  
             ??_init_regs 0074                  intlevel1 0000         ??_prekidna_rutina 0070  
